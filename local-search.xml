<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>求学</title>
    <link href="/posts/31151.html"/>
    <url>/posts/31151.html</url>
    
    <content type="html"><![CDATA[<p>#求学</p><blockquote><p>3&#x2F;8&#x2F;22</p></blockquote><p>迈进大门，大风卷起的风尘减缓着我的脚步。墙角内，干枯的杂草被风折断，嘎嘎作响。这里的空气令我无法呼吸，只好用墨绿色围巾捂住我的口鼻，另一只手拎着墨色公文包，艰难地走向那栋陌生的土瓦房。</p><p>我进屋后，面前是一个饭桌，被铁锈腐蚀的桌脚支撑着一块四方形木板，面板上空无一物，只有被岁月折磨的裂痕。旁边的水缸也像长久静止般，水的表面没上了一层尘埃和青苔。</p><p>我习惯性地走进那间屋子，一个瘦骨嶙峋的白发老人正蜷缩在土炕角落，她身上的白大褂与这个房子格格不入。</p><p>“姥，你在做什么”我奋力抱住她，窗帘被呼吁的风吹的四处飘扬，屋子里沸沸扬扬的尘埃四处穿梭，窗台上还有一坨被风干的屎，那是我小时候拉的，但我至今还能闻到它的臭味。</p><p>“我害怕，我怕黑”她伸手搂住我，身体止不住地颤抖，眼泪将我衬衫烫出一个洞。</p><p>我俩跪在地上相互拥抱了很久，<br>在那一瞬间肚子里翻涌的胃液反噬到咽喉，那是我昨天与朋友们把酒言欢的散伙饭，这些事阻止我对至亲之人说谎。不久后她心情平复了许多，我把她抱上炕。关上窗户，拉起窗帘，被子铺在土炕上，把她裹起来，然后跟她讲我的小时候。一只手攥住那只干瘪的手，另一只手抚摸她的脑门，我怕她生病，因为已经没有钱去医院了。</p><p>我眼前的这位老人在我编织的故事中睡着了，她是那样的安详。但愿她不会再醒过来，与这该死的生活做煎熬。</p><p>我想给她幺点水，于是找了个盆，只是哙出来的水越发浑浊，最后我只好把它喝了。在口中过滤掉渣滓，然后咕咚咕咚咽下去，水有点甜，没有学校里那种洗衣粉的味道。</p><p>我不愿再去里面看她，我害怕接受这一现实。拍了拍裤兜，里面是空的，于是蹲下摘点儿杂草含在口中。</p><p>一年前，我们一家三口一起生活，那时阳光还能透过玻璃照射在餐桌上，小时候我用玻璃球把门框上的玻璃打出了一道裂痕，之后它就反射出五颜六色的光，每天映射在不同的角落。木梁上，炉子边等犄角旮旯的地方，那时光线的颜色就是我的心目中的大千世界。</p><p>我在村里漫无目的地走着，身上只有一条能遮挡沙尘的围巾，我很想用它换一盒烟。前面有一群人在凿铁，让这个村有了点生气。</p><p>我从旁边路过时，一个穿着黑色皮衣的男人叫住了我。</p><p>“大学生，什么时候回来的”</p><p>“今天刚来”我发觉每一个人都打量着我，但我一个也不认识。</p><p>“咱们村好不容易出了个大学生，你可得好好学啊”那个男人拍了拍我的肩膀说。</p><p>我苦笑了一下，淡淡地说“有烟吗”</p><p>他递给我一支烟，然后给我点了火。</p><p>“你姥爷还没出来呢？”</p><p>“嗯”我盯着面前光膀子的男人打铁。</p><p>他见我没有交谈的意思，就没有再问下去，时趣地望向一边。</p><p>我盯了一会儿，觉得心烦意乱就走了。</p><p>“好好的一个老师，怎么就进监狱了”后面的那群人小声议论着，仿佛这就是他们活着的目的。</p><p>这个问题我想不明白，但我将要为这件事抛下很多东西，然后狼狈地回到我曾经深恶痛疾的土地上劳作。下放一个细皮嫩肉的大学生手里握着粗糙的锄头在黄土上耕耘，娶一个当地媳妇糊里糊涂的过一辈子。</p><p>一年前我姥爷勤勤恳恳教学，肩负起了做人生导师的责任，努力争取把每一位青年人送入理想的高中。</p><p>那一天的庆功宴上，我姥爷为了庆祝自己将要退休，喝了许多酒。醉酒后玷污了自己的学生，半夜女生家长找上门时，床上躺着两具裸体。</p><p>当他酒醒后，发现自己已身处在拘留室。他在里面大闹自己是被冤枉的，但没人理会他。一生气就用手铐勒了狱警的脖子，为此还被打伤了胳膊。</p><p>“他就是这样，一直不让人省心”我姥说。</p><p>“姥，我明天请假，和你一起去看他”</p><p>“不行，他让你好好学习，别去看他”</p><p>那一晚很长，在过去与未来中不断穿梭，脑子里塞满了痛苦与不甘，致使第二天浑浑噩噩的。</p><p>“你姥爷被人拍了照片，已是证据确凿”律师说。</p><p>“可他是被冤枉的”我反驳道。</p><p>“每个人都知道他是被冤枉的，但也都认为这理所当然”</p><p>“你能为他做些什么”</p><p>“我能做的就是抓住醉酒这一点，尽量争取到减刑”</p><p>“好，非常感谢”</p><p>我们在路上短暂地聊了会儿，就去找餐馆了。</p><p>“就是这家，他这儿的米线可好吃了”我说。</p><p>“好，进去尝尝”</p><p>进入芙蓉米线后，客人来来往往，一副市井气息。</p><p>“服务员，两碗米线”</p><p>中间还有一段小插曲……</p><p>那家的女服务员，我很想要人家号码，但是最终没要。</p><p>直到一个月后我和我姥爷见了面，还有那名律师。我们仨在一间拘禁室聊了一下午，从案件到工作，从家庭到人生。<br>只是人生对于我俩过于遥远，对于知命之年的姥爷来说又，</p><p>离开我姥爷后，我又与那名律师单独在楼道聊了会儿。</p><p>“他其实什么也没有做错，只是机不逢时罢了”律师说。</p><p>“可为什么是他”我疑惑道，像是对上帝的发问。</p><p>他点了一支烟，吐出一团虚无缥缈的烟雾，说道：“我给许多好人辩过护，监狱里并不都是坏人，还有一部分人，只因他们没有证据，所以这些人就应该进去”</p><p>他走后我思考良久，却始终无法理解他说的话。</p><p>三天后我提着公文包走到了大门口，我回头望了望那位正靠在门框旁的女人。</p><p>“姥，你回屋去吧”我的嗓音有点沙哑。</p><p>但她还是靠在那里，望着他的外孙步履蹒跚地离开，直至他的影子消失。</p><p>我口袋里掏出一小包钞票，上面积满了灰尘，零零散散的总共二百块，递给了售票员八十。她鄙夷地白了我一眼，然后装入了口袋。</p><p>那是我很久以前藏的钱， 以后我会把翻千倍万倍。 因为我明白人不能靠感情活着。</p><p>七年后我取得了法学学位，穿着华丽的西服从台上走过，仪表堂堂，俨然一个成功人士。</p><p>致辞词时我似乎是在发表获奖感言一样，感谢了导师，学校，中国的优越制度甚至是不存在的父母。仿佛与落座的那些人一样，从同一起点出发。</p><p>三月八日，我姥爷让我陪他去墓前，他告诉我她想咱俩了。</p><p>这一天每个年轻人都会买礼物送给心目中伟大的女人，我也不例外，象征性地给她买了一捧玫瑰，并告诉她我很爱她。</p><p>晚上我一个人回到公寓，在黑暗中褪去所有证明我身份的东西，犹如一坨还未风干的屎，默默地跪在佛像前，因为只有佛祖明白我的罪行。</p><p>“我昨天给你打了那么多电话，为什么不接”</p><p>“手机没电，关机了”</p><p>“那你昨天晚上在干嘛，是不是背着我勾搭别的女孩去了”</p><p>没有，昨天我在过节“我反驳道。</p><p>“和谁”</p><p>“佛祖”</p><p>她扑哧地笑了。</p><p>“你额头怎么回事啊，不会的真给佛祖磕头了吧”她用无名指轻轻点了点我的额头。</p><p>“因为那样才会灵验”</p><p>“真是个笨蛋，”她嘟囔着嘴，哭笑不得。</p><p>“我有时觉得你很奇怪嗳”</p><p>“哪里奇怪”</p><p>“好像我和你离得很远”，她低着头摆弄着橘黄色的包包，又说，“我想了解你，想进入你的心”</p><p>“我的过去对你或整个世界来说不值一提，但我依然爱你”</p><p>我和她坐在公园的长椅上面，看着周围的人聚在一起，然后一哄而散，感觉很奇妙。</p><p>%%——灵感源于「漠河舞厅2022」</p>]]></content>
    
    
    <categories>
      
      <category>故事</category>
      
    </categories>
    
    
    <tags>
      
      <tag>小说</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NodeJS</title>
    <link href="/posts/38307.html"/>
    <url>/posts/38307.html</url>
    
    <content type="html"><![CDATA[<h1 id="NodeJS"><a href="#NodeJS" class="headerlink" title="NodeJS"></a>NodeJS</h1><h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><h2 id="认识"><a href="#认识" class="headerlink" title="认识"></a>认识</h2><blockquote><p>概述：浏览器作为运行环境时，javascript可以做前端开发；若Node.js作为运行环境时，JavaScript就可以做后端开发</p></blockquote><blockquote><p>用途： 基于 Express框架可以快速构建Web应用；基于Electron框架可以构建跨平台的桌面应用；基于 restify框架可以快速构建API接口项目；还有读写操作数据库等等</p></blockquote><blockquote><p>语法：JavaScript 基础语法＋Node.js 内置API模块(fs、path、http等)＋第三方API模块(express、mysql等)</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">node -v                 <span class="hljs-comment">#查看版本</span><br>node xxx.js             <span class="hljs-comment">#运行文件</span><br></code></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p>引入(<em>require</em>)｜输出(<em>node</em>)js文件时可忽略扩展名；<em>node_modules</em>内的文件可直接输入文件名引入</p></blockquote><blockquote><p>报错</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-number">1.</span> <span class="hljs-string">`require is not defined`</span><br>html不能导入nodejs文件｜带有<span class="hljs-built_in">require</span>的文件<br><span class="hljs-number">2.</span> <span class="hljs-string">`unable to resolve dependency tree`</span><br>npm i npm@<span class="hljs-number">6</span> -g，解决npm版本过高问题<br></code></pre></td></tr></table></figure><h1 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h1><h2 id="NPM"><a href="#NPM" class="headerlink" title="NPM"></a>NPM</h2><blockquote><p>全局包可以在所有项目中使用；本地包(<em>node_modules</em>)只能通过<em>require</em>｜<em>import</em>引入。优先用本地包+npx+scripts</p></blockquote><table><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td>版本</td><td></td></tr><tr><td>npm -v</td><td>查看npm版本</td></tr><tr><td>npm view xxx [version]</td><td>查询当前包的所有版本，查询当前包的版本</td></tr><tr><td>安装</td><td></td></tr><tr><td>npm  init  -y</td><td>生成package.json</td></tr><tr><td>npm  -i</td><td>安装依赖</td></tr><tr><td>npm  i｜rm xxx[@v] [-g] [-s｜d]</td><td>安装｜删除包</td></tr><tr><td>npm  i  git+<a href="https://gitee.com/whluqi/git.git">https://gitee.com/whluqi/git.git</a></td><td>安装github包</td></tr><tr><td>npm list [-g]</td><td>查询已安装的包</td></tr><tr><td>npm cache clean —force</td><td>清除缓存（安装失败时使用）</td></tr><tr><td>更新</td><td></td></tr><tr><td>npm  update  [xxx] [-g] [—s]</td><td>更新所有｜指定包</td></tr><tr><td>npm outdated</td><td>查询需要更新的包</td></tr><tr><td>其他</td><td></td></tr><tr><td>npm  root  [-g]</td><td>查询包的安装路径</td></tr><tr><td>npm  run  xxx [&amp;｜&amp;&amp;  npm run xxx]</td><td>运行脚本（start、test可省略run，也可省略npx）。&amp;表示同时执行，&amp;&amp;表示顺序执行</td></tr><tr><td>code project_Name</td><td>在新窗口打开项目</td></tr></tbody></table><h2 id="Package"><a href="#Package" class="headerlink" title="Package"></a>Package</h2><blockquote><p>版本：在依赖包中<code>^</code>表示2.3.0 — 3.0.0；<code>~</code>表示2.3.0 — 2.4.0</p></blockquote><blockquote><p>环境：在scripts中添加<code>NODE_ENV=development</code>在不同的环境中运行（test测试｜development开发｜production生产），也可在终端写入</p></blockquote><blockquote><p>多个命令：在scripts添加<code>&amp;｜&amp;&amp;</code>来执行多个命令（&amp;同时执行｜&amp;&amp;顺序执行），也可在终端写入</p></blockquote><blockquote><p>域名和端口：在scripts添加<code>--host=127.0.0.1  --port=80</code>改变域名和端口，也可在终端写入</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs jsx">&#123;<br>  <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;packages&quot;</span>, <br>  <span class="hljs-string">&quot;version&quot;</span>: <span class="hljs-string">&quot;1.0.0&quot;</span>,<br>  <span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;&quot;</span>, <br>  <span class="hljs-string">&quot;main&quot;</span>: <span class="hljs-string">&quot;new.js&quot;</span>,                  <span class="hljs-comment">//入口文件</span><br>  <span class="hljs-string">&quot;dependencies&quot;</span>: &#123;                  <span class="hljs-comment">//生产时的依赖包</span><br>    <span class="hljs-string">&quot;body-parser&quot;</span>: <span class="hljs-string">&quot;^1.19.0&quot;</span>,<br>    <span class="hljs-string">&quot;charenc&quot;</span>: <span class="hljs-string">&quot;^0.0.2&quot;</span>,<br>    <span class="hljs-string">&quot;cheerio&quot;</span>: <span class="hljs-string">&quot;^1.0.0-rc.10&quot;</span>,<br>    <span class="hljs-string">&quot;connect-mongo&quot;</span>: <span class="hljs-string">&quot;^4.6.0&quot;</span><br>  &#125;,<br>  <span class="hljs-string">&quot;devDependencies&quot;</span>: &#123;&#125;,             <span class="hljs-comment">//开发时的依赖包</span><br>  <span class="hljs-string">&quot;scripts&quot;</span>: &#123;                       <span class="hljs-comment">//脚本命令(用于封装某些功能)</span><br>    <span class="hljs-string">&quot;test&quot;</span>: <span class="hljs-string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span>,<br>    <span class="hljs-string">&quot;webpack&quot;</span>: <span class="hljs-string">&quot;webpack -v&quot;</span>,              <span class="hljs-comment">//npx可省略</span><br>    <span class="hljs-string">&quot;build&quot;</span>: <span class="hljs-string">&quot;cross-env NODE_ENV=test node app.js&quot;</span><br>  &#125;,<br>  <span class="hljs-string">&quot;keywords&quot;</span>: [],<br>  <span class="hljs-string">&quot;private&quot;</span>: <span class="hljs-literal">true</span>,                        <span class="hljs-comment">//是否私有</span><br>  <span class="hljs-string">&quot;author&quot;</span>: <span class="hljs-string">&quot;wangluqi &lt;21997@qq.com&gt;&quot;</span>,<br>  <span class="hljs-string">&quot;license&quot;</span>: <span class="hljs-string">&quot;ISC&quot;</span>  <br>&#125;<br></code></pre></td></tr></table></figure><h3 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h3><ul><li><p>cnpm</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install -g cnpm --registry=https://registry.npmmirror.com<br><br><span class="hljs-comment">#如报：无法加载文件……因为在此系统上禁止运行脚本</span><br>1. 以管理员身份打开Windows PowerShell<br>2. 输入set-ExecutionPolicy RemoteSigned，按Y执行策略<br></code></pre></td></tr></table></figure></li><li><p>yarn</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">yarn init -y                                          <br>yarn                                                      <br>yarn config <span class="hljs-built_in">set</span> registry https://registry.npm.taobao.org     <span class="hljs-comment">#切换为淘宝源</span><br>yarn add xxx[@v] [--dev] [--optional] [global]               <span class="hljs-comment">#开发|可选依赖</span><br>yarn remove [global]|upgrade xxx  <br>yarn run xxx<br></code></pre></td></tr></table></figure></li><li><p>nrm（切换源）</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">nrm <span class="hljs-built_in">ls</span>                   <span class="hljs-comment">#查看当前源</span><br>nrm use taobao           <span class="hljs-comment">#切换源</span><br>nrm <span class="hljs-built_in">test</span>                 <span class="hljs-comment">#测速</span><br></code></pre></td></tr></table></figure></li><li><p>npx（临时包）</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm i nodemon -s                  <span class="hljs-comment">#执行本地包的命令(默认只能执行全局安装的nodemon)</span><br>npx nodemon app.js<br><br>npx create-react-app my-react-app      <span class="hljs-comment">#临时安装包，执行后会自动删除</span><br><br>npx node@8 -v                          <span class="hljs-comment">#切换node版本</span><br></code></pre></td></tr></table></figure></li><li><p>nvm（版本管理）</p></li></ul><h3 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h3><ul><li><p>body-parser</p>  <figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jsx">app.<span class="hljs-title function_">use</span>(bodyParser.<span class="hljs-title function_">urlencoded</span>(&#123; <span class="hljs-attr">extended</span>: <span class="hljs-literal">false</span> &#125;))  <span class="hljs-comment">//解析文本格式</span><br>app.<span class="hljs-title function_">use</span>(bodyParser.<span class="hljs-title function_">json</span>())                           <span class="hljs-comment">//解析json格式(当请求参数为json时)</span><br></code></pre></td></tr></table></figure></li><li><p>nodemon</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">nodemon xxx.js             <span class="hljs-comment">#运行文件并实时监听</span><br></code></pre></td></tr></table></figure></li></ul><h1 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h1><h2 id="创建Web服务器"><a href="#创建Web服务器" class="headerlink" title="创建Web服务器"></a>创建Web服务器</h2><blockquote><p>负责消费资源的电脑为做客户端；负责对外提供网络资源的电脑为服务器。而N哦的JS的HTTP模块提供Web服务器</p></blockquote><blockquote><p>在开发测试期间，127.0.0.1对应的域名是localhost即这台电脑。每个端口号只对应一台服务器，且在URL中80端口可省略</p></blockquote><blockquote><p>在开发期间，自己的电脑既是一台服务器又是客户端，为了方便测试，可以在自己的浏览器中输入127.0.0.1就能把自己的电脑当做服务器进行访问了。</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">let</span> http = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;http&#x27;</span>);     <span class="hljs-comment">//导入http|https，具体看接口的协议</span><br><span class="hljs-keyword">let</span> port = <span class="hljs-number">8081</span>;<br><span class="hljs-keyword">let</span> hostname = <span class="hljs-string">&#x27;127.0.0.1&#x27;</span>;<br><span class="hljs-keyword">let</span> data = <span class="hljs-string">&#x27;&#x27;</span>;<br>                                <span class="hljs-comment">//请求客户端数据，响应客户端数据</span><br><span class="hljs-keyword">const</span> server = http.<span class="hljs-title function_">createServer</span>(<span class="hljs-function">(<span class="hljs-params">request, response</span>) =&gt;</span> &#123;   <br><span class="hljs-keyword">if</span> (request.<span class="hljs-property">url</span> != <span class="hljs-string">&#x27;/favicon.ico&#x27;</span>) &#123;   <br> response.<span class="hljs-title function_">setHeader</span>(<span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span>, <span class="hljs-string">&#x27;*&#x27;</span>);       <span class="hljs-comment">//解决跨域</span><br>       response.<span class="hljs-title function_">writeHead</span>(<span class="hljs-number">200</span>, &#123; <span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;text/html;charset=utf-8&#x27;</span> &#125;);<br>       <span class="hljs-comment">//设置请求……</span><br>    &#125;<br>&#125;)<br> <br>server.<span class="hljs-title function_">listen</span>(port, hostname, <span class="hljs-function">() =&gt;</span> &#123;           <span class="hljs-comment">//port&gt;1023即可</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Server running at http://<span class="hljs-subst">$&#123;hostname&#125;</span>:<span class="hljs-subst">$&#123;port&#125;</span>`</span>);<br>&#125;)<br>server.<span class="hljs-title function_">close</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Server stopped at http://<span class="hljs-subst">$&#123;hostname&#125;</span>:<span class="hljs-subst">$&#123;port&#125;</span>`</span>);<br>&#125;)<br>server.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;error&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(err.<span class="hljs-property">message</span>);<br>&#125;)<br></code></pre></td></tr></table></figure><h2 id="设置请求"><a href="#设置请求" class="headerlink" title="设置请求"></a>设置请求</h2><blockquote><p>接收请求</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs jsx">request.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;data&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">chunk</span>) =&gt;</span> &#123;       <span class="hljs-comment">//服务器接收到的post数据</span><br>    data += chunk.<span class="hljs-title function_">toString</span>();<br>&#125;);<br>request.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;end&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    response.<span class="hljs-title function_">write</span>(<span class="hljs-string">&#x27;数据接收完成&#x27;</span>);<br>    response.<span class="hljs-title function_">end</span>(data);               <span class="hljs-comment">//结束请求，必须写</span><br>&#125;)<br>request.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;close&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;服务已关闭，在response.end()后&quot;</span>);<br>&#125;)<br>request.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;error&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(err.<span class="hljs-property">message</span>);<br>&#125;)<br></code></pre></td></tr></table></figure><blockquote><p>发送请求</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">let</span> options=&#123;                   <span class="hljs-comment">//请求参数，包括hostname、port、method、path、header等</span><br>    <span class="hljs-attr">hostname</span>: <span class="hljs-string">&quot;cn.bing.com&quot;</span>,<br>    <span class="hljs-attr">port</span>: <span class="hljs-number">80</span>,<br><span class="hljs-attr">path</span>:<span class="hljs-string">&#x27;/user?name=Tom&amp;age=18&amp;city=beijing&#x27;</span>,<br>&#125;<br><br><span class="hljs-keyword">let</span> req = http.<span class="hljs-title function_">request</span>(options, <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;    <br>    res.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;data&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params">chunk</span>) &#123;<br>        data += chunk.<span class="hljs-title function_">toString</span>();<br>    &#125;);<br>    res.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;end&#x27;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;数据发送完成&quot;</span>);<br>    &#125;);<br>    res.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;close&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;请求已关闭&quot;</span>)<br>    &#125;)<br>&#125;)<br><br>req.<span class="hljs-title function_">write</span>(<span class="hljs-string">&#x27;写入请求数据&#x27;</span>);           <span class="hljs-comment">//客户端发送给服务器的数据</span><br>req.<span class="hljs-title function_">end</span>(<span class="hljs-string">&#x27;结束请求&#x27;</span>);<br>req.<span class="hljs-title function_">on</span>(<span class="hljs-string">&quot;error&quot;</span>, <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(err.<span class="hljs-property">message</span>);<br>&#125;)<br>response.<span class="hljs-title function_">write</span>(<span class="hljs-string">&#x27;hello world!&#x27;</span>);<br>response.<span class="hljs-title function_">end</span>(data);<br><br><span class="hljs-comment">//http.get是http.request的简化版，前者会自动将请求方法设为get并自动调用req.end()</span><br>http.<span class="hljs-title function_">get</span>(options, <span class="hljs-function">(<span class="hljs-params">res</span>) =&gt;</span> &#123;<br>    res.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;data&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">chunk</span>) =&gt;</span> &#123;<br>        data += chunk.<span class="hljs-title function_">toString</span>();<br>    &#125;)<br>    res.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;end&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>        response.<span class="hljs-title function_">write</span>(<span class="hljs-string">&#x27;数据发送完成&#x27;</span>);<br>        response.<span class="hljs-title function_">end</span>(data);<br>    &#125;)<br>    res.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;close&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;请求已关闭&quot;</span>);<br>    &#125;)<br>&#125;).<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;error&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(err.<span class="hljs-property">message</span>);<br>&#125;)<br></code></pre></td></tr></table></figure><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><blockquote><p>请求方法</p></blockquote><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>request.url</td><td>请求路径</td></tr><tr><td>request.statusCode</td><td>请求状态码</td></tr><tr><td>request.headers</td><td>请求头部</td></tr><tr><td>request.method</td><td>请求方法</td></tr><tr><td>方法</td><td>描述</td></tr><tr><td>request.setEncoding(‘utf-8’)</td><td>设置编码</td></tr><tr><td>request.pause｜resume()</td><td>终止｜恢复data事件</td></tr></tbody></table><blockquote><p>响应方法</p></blockquote><table><thead><tr><th>属性</th><th>描述</th></tr></thead><tbody><tr><td>response.statusCode</td><td>响应状态码</td></tr><tr><td>response.headers</td><td>响应头部</td></tr><tr><td>方法</td><td>描述</td></tr><tr><td>response.setHeader()</td><td>必须在writeHead之前且优先级较低</td></tr><tr><td>response.writeHead()</td><td>发送响应头</td></tr><tr><td>response.write(chunk, encoding &#x3D; ‘utf8’)</td><td>发送chunk数据</td></tr><tr><td>response.end(chunk,encoding &#x3D; ‘utf8’)</td><td>相当于res.write(chunk)+res.end()</td></tr></tbody></table><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs jsx">                 <span class="hljs-comment">//状态码   内容长度                         媒体类型</span><br>response.<span class="hljs-title function_">writeHead</span>(<span class="hljs-number">200</span>, &#123; <span class="hljs-string">&#x27;Content-Length&#x27;</span>: value.<span class="hljs-property">length</span>, <span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;text/html;charset=utf-8&#x27;</span> &#125;)<br></code></pre></td></tr></table></figure><h1 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h1><h2 id="方法-1"><a href="#方法-1" class="headerlink" title="方法"></a>方法</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">const</span> url = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;url&quot;</span>);<br><span class="hljs-keyword">let</span> api=<span class="hljs-string">&#x27;http://www.itying.com?name=zhangsan&amp;age=20&#x27;</span>;<br><br><span class="hljs-comment">//将url字符串转对象，true返回的query为对象</span><br><span class="hljs-keyword">let</span> urlObject = url.<span class="hljs-title function_">parse</span>(api,<span class="hljs-literal">true</span>|<span class="hljs-literal">false</span>);      <br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(url.<span class="hljs-title function_">parse</span>(api).<span class="hljs-property">pathname</span>);             <span class="hljs-comment">//获取api的pathname</span><br><br><span class="hljs-comment">//将url对象转字符串</span><br><span class="hljs-keyword">let</span> urlString = url.<span class="hljs-title function_">format</span>(urlObject);          <br><br><span class="hljs-comment">//拼接｜替换url</span><br>url.<span class="hljs-title function_">resolve</span>(<span class="hljs-string">&#x27;http://example.com/&#x27;</span>, <span class="hljs-string">&#x27;/one&#x27;</span>);       <span class="hljs-comment">//&#x27;http://example.com/one&#x27;</span><br>url.<span class="hljs-title function_">resolve</span>(<span class="hljs-string">&#x27;http://example.com/one&#x27;</span>, <span class="hljs-string">&#x27;/two&#x27;</span>);    <span class="hljs-comment">//&#x27;http://example.com/two&#x27;</span><br></code></pre></td></tr></table></figure><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs jsx">protocol：协议<br>slashes：为<span class="hljs-literal">true</span>时protocol后为<span class="hljs-comment">//</span><br>auth：用户名和密码<br>host：<span class="hljs-attr">hostname</span>:port<br>port：<br>hostname：<br>hash：#锚点<br>search：?query<br>query：<br>pathname：/路径<br>path：pathname+search<br>href：url字符串<br></code></pre></td></tr></table></figure><h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><blockquote><p>myURL &#x3D;&#x3D;&#x3D; <code>url.parse(urlLink,true)</code>；mlyURL + “”  &#x3D;&#x3D;&#x3D;  <code>url.format(urlObj)</code></p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-comment">//如果urlLink是链接、绝对路径则无须加第二个参数(host+pathname)</span><br><span class="hljs-keyword">const</span> urlLink=<span class="hljs-string">&#x27;http://www.jianshu.com/write#/notebooks/11347346/notes/14939&#x27;</span><br><span class="hljs-keyword">const</span> myURL = <span class="hljs-keyword">new</span> <span class="hljs-title function_">URL</span>(urlLink);  <br><br><span class="hljs-comment">//相对路径，https://example.org/one</span><br><span class="hljs-keyword">const</span> urlLinks=<span class="hljs-string">&#x27;/one&#x27;</span>;<br><span class="hljs-keyword">const</span> myURL = <span class="hljs-keyword">new</span> <span class="hljs-title function_">URL</span>(urlLinks,<span class="hljs-string">&#x27;https://example.org/&#x27;</span>);<br><br><span class="hljs-comment">//对url进行增删改查</span><br>myURL.<span class="hljs-property">searchParams</span>.<span class="hljs-property">get</span>|<span class="hljs-title function_">getAll</span>(<span class="hljs-string">&#x27;name&#x27;</span>);            <span class="hljs-comment">//返回字符串|数组</span><br>myURL.<span class="hljs-property">searchParams</span>.<span class="hljs-title function_">set</span>(<span class="hljs-string">&#x27;name&#x27;</span>,<span class="hljs-string">&#x27;liu&#x27;</span>);<br>myURL.<span class="hljs-property">searchParams</span>.<span class="hljs-title function_">append</span>(<span class="hljs-string">&#x27;data&#x27;</span>,<span class="hljs-string">&#x27;21/11/14&#x27;</span>);<br>myURL.<span class="hljs-property">searchParams</span>.<span class="hljs-title function_">delete</span>(<span class="hljs-string">&#x27;name&#x27;</span>);<br></code></pre></td></tr></table></figure><h2 id="querystring"><a href="#querystring" class="headerlink" title="querystring"></a><strong><strong>querystring</strong></strong></h2><blockquote><p>querystring与qs区别：前者为node内置模块，qs需提前安装并引入，并且后者更加高效</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">const</span> queystring = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;querystring&#x27;</span>);<br><span class="hljs-keyword">const</span> qs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;qs&#x27;</span>);<br><br><span class="hljs-comment">//url对象转字符串                                            </span><br><span class="hljs-keyword">let</span> urls = querystring.<span class="hljs-title function_">stringify</span>(url.<span class="hljs-title function_">parse</span>(request.<span class="hljs-property">url</span>, <span class="hljs-literal">true</span>).<span class="hljs-property">query</span>, &#123; <span class="hljs-attr">decodeURIComponent</span>: <span class="hljs-built_in">escape</span> &#125;)   <span class="hljs-comment">//编码(把特殊符号变成%)</span><br><br><span class="hljs-keyword">let</span> q = qs.<span class="hljs-title function_">stringify</span>(&#123;            <span class="hljs-comment">//name=wang&amp;age=19</span><br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;wang&#x27;</span>,<br>    <span class="hljs-attr">age</span>: <span class="hljs-number">19</span><br>&#125;)<br><br><span class="hljs-comment">//url字符串转对象</span><br>querystring.<span class="hljs-title function_">parse</span>(urls, &#123; <span class="hljs-attr">maxKeys</span>: <span class="hljs-number">1</span>, <span class="hljs-attr">decodeURIComponent</span>: <span class="hljs-built_in">unescape</span> &#125;)   <span class="hljs-comment">//最大解析个数，解码</span><br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(qs.<span class="hljs-title function_">parse</span>(q));         <span class="hljs-comment">//&#123; name: &quot;wang&quot;, age: 19 &#125; </span><br></code></pre></td></tr></table></figure><h1 id="FS"><a href="#FS" class="headerlink" title="FS"></a>FS</h1><h2 id="读写"><a href="#读写" class="headerlink" title="读写"></a>读写</h2><blockquote><p>fs方法均为异步，方法Sync可设为同步方式</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><br><span class="hljs-comment">//读取</span><br>fs.<span class="hljs-title function_">readFile</span>(<span class="hljs-string">&#x27;path&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">err, data</span>)=&gt;</span>&#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data.<span class="hljs-title function_">toString</span>()); <br>&#125;)<br><br><span class="hljs-keyword">let</span> data=fs.<span class="hljs-title function_">readFileSync</span>(<span class="hljs-string">&#x27;path&#x27;</span>,<span class="hljs-string">&#x27;utf-8&#x27;</span>);<br><br>fs.<span class="hljs-property">promises</span>.<span class="hljs-title function_">stat</span>(<span class="hljs-string">&#x27;path&#x27;</span>).<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">data</span> =&gt;</span> &#123;        <span class="hljs-comment">//异步promise式</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data);<br>&#125;).<span class="hljs-title function_">catch</span>(<span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(err);<br>&#125;)<br><br><span class="hljs-comment">//写入（创建并写入｜覆盖内容）</span><br>fs.<span class="hljs-title function_">writeFile</span>(<span class="hljs-string">&#x27;path&#x27;</span>,<span class="hljs-string">&#x27;content&#x27;</span>,&#123;<span class="hljs-attr">flag</span>: <span class="hljs-string">&#x27;r&#x27;</span>&#125;, <span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;    <span class="hljs-comment">//创建文件并写入内容|覆盖文件内容</span><br>    <span class="hljs-keyword">if</span> (err) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(err);<br>      <span class="hljs-keyword">return</span><br>    &#125;<br>&#125;)<br><br><span class="hljs-comment">//追加（创建并写入｜追加内容）</span><br>fs.<span class="hljs-title function_">appendFile</span>(<span class="hljs-string">&#x27;path&#x27;</span>,<span class="hljs-string">&#x27;content&#x27;</span>, <span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (err) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">error</span>(err);<br>      <span class="hljs-keyword">return</span>;<br>    &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><p><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/f4ba9e64-1819-473f-9822-7a6a97f3d6e4/20161011143601665.png" alt="20161011143601665.png"></p><h2 id="状态"><a href="#状态" class="headerlink" title="状态"></a>状态</h2><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-comment">//检测文件</span><br>fs.<span class="hljs-title function_">stat</span>(<span class="hljs-string">&#x27;path&#x27;</span>,<span class="hljs-function">(<span class="hljs-params">err,data</span>)=&gt;</span>&#123;<br>  <span class="hljs-keyword">if</span>(err)&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(err);<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data.<span class="hljs-title function_">isFile</span>());         <span class="hljs-comment">//是否为文件</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data.<span class="hljs-title function_">isDirectory</span>());    <span class="hljs-comment">//是否为目录</span><br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(stats.<span class="hljs-property">size</span>);            <span class="hljs-comment">//文件大小</span><br>&#125;)<br><br><span class="hljs-comment">//文件是否存在</span><br><span class="hljs-keyword">let</span> exists = fs.<span class="hljs-title function_">existsSync</span>(<span class="hljs-string">&#x27;path&#x27;</span>);<br><br><span class="hljs-comment">//创建｜删除文件</span><br>fs.<span class="hljs-property">mkdir</span>|<span class="hljs-title function_">unlink</span>(<span class="hljs-string">&#x27;path&#x27;</span>, <span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span>(err)&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(err);<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br>&#125;)<br><br><span class="hljs-comment">//拷贝文件</span><br>fs.<span class="hljs-title function_">copyFile</span>(<span class="hljs-string">&#x27;firstFile&#x27;</span>, <span class="hljs-string">&#x27;endFile&#x27;</span>, <span class="hljs-function"><span class="hljs-params">err</span> =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span>(err)&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(err);<br>    <span class="hljs-keyword">return</span>;<br>  &#125;<br>&#125;)<br><br><span class="hljs-comment">//监听文件（上网查）</span><br></code></pre></td></tr></table></figure><h2 id="流读写"><a href="#流读写" class="headerlink" title="流读写"></a>流读写</h2><blockquote><p>普通读写一次性读取占用内存多且效率低下，适用于少量文件；流读写为多次读取且合理分配，适用于多个文件</p></blockquote><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">let</span> readStream = fs.<span class="hljs-title function_">createReadStream</span>(<span class="hljs-string">&#x27;./one.txt&#x27;</span>);<br><span class="hljs-keyword">let</span> writeStream = fs.<span class="hljs-title function_">createWriteStream</span>(<span class="hljs-string">&#x27;./linshi/two.txt&#x27;</span>);<br>readStream.<span class="hljs-title function_">pipe</span>(writeStream);    <span class="hljs-comment">//把one.txt的内容复制到linshi文件夹下并重命名为two.txt</span><br></code></pre></td></tr></table></figure><h1 id="PATH"><a href="#PATH" class="headerlink" title="PATH"></a>PATH</h1><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs jsx"><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;path&quot;</span>);<br><br><span class="hljs-keyword">const</span> pathObject = path.<span class="hljs-title function_">parse</span>(<span class="hljs-string">&#x27;paths&#x27;</span>);     <span class="hljs-comment">//输出路径为对象</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(path.<span class="hljs-title function_">format</span>(pathObject));       <span class="hljs-comment">//输出为字符串</span><br><br>paths = path.<span class="hljs-property">join</span>｜<span class="hljs-title function_">resolve</span>(<span class="hljs-string">&#x27;Desktop&#x27;</span>,<span class="hljs-string">&#x27;node&#x27;</span>,<span class="hljs-string">&#x27;one.js&#x27;</span>);   <span class="hljs-comment">//拼接路径并规范化｜拼接为绝对路径</span><br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(__filename);                    <span class="hljs-comment">//获取当前文件及路径｜路径，舍弃(./｜../方法)</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(__dirname);<br></code></pre></td></tr></table></figure><h1 id="本地模块"><a href="#本地模块" class="headerlink" title="本地模块"></a>本地模块</h1>]]></content>
    
    
    <categories>
      
      <category>后端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nodejs</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/posts/16107.html"/>
    <url>/posts/16107.html</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>VUE</title>
    <link href="/posts/45854.html"/>
    <url>/posts/45854.html</url>
    
    <content type="html"><![CDATA[<h1 id="VUE3"><a href="#VUE3" class="headerlink" title="VUE3"></a>VUE3</h1><h1 id="基础"><a href="#基础" class="headerlink" title="基础"></a>基础</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-number">1.</span> npm i vue vite<br><span class="hljs-number">2.</span> yarn create <span class="hljs-meta">@vitejs</span>/app xxx<br><span class="hljs-number">3.</span> yarn<br><span class="hljs-number">4.</span> yarn [dev|build|preview] [--mode production|development]  <span class="hljs-comment">//开发|生产|本地生产预览</span><br><span class="hljs-number">5.</span> 配置文件<br></code></pre></td></tr></table></figure><p>配置</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-comment">//vite.config.ts</span><br><span class="hljs-keyword">import</span> &#123; defineConfig &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vite&#x27;</span><br><span class="hljs-keyword">import</span> vue <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@vitejs/plugin-vue&#x27;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title function_">defineConfig</span>(&#123;<br>  <span class="hljs-attr">server</span>: &#123;<br>    <span class="hljs-attr">port</span>: <span class="hljs-number">8080</span>,         <span class="hljs-comment">//启动端口</span><br>    <span class="hljs-attr">hmr</span>: &#123;<br>      <span class="hljs-attr">host</span>: <span class="hljs-string">&#x27;127.0.0.1&#x27;</span>,<br>      <span class="hljs-attr">port</span>: <span class="hljs-number">8080</span><br>    &#125;<br>  &#125;,<br>  <span class="hljs-attr">resolve</span>: &#123;<br>    <span class="hljs-attr">alias</span>: &#123;<br>      <span class="hljs-string">&quot;@&quot;</span>: <span class="hljs-string">&quot;/src&quot;</span>,<br>      <span class="hljs-attr">store</span>: <span class="hljs-string">&quot;/src/store&quot;</span>,<br>    &#125;,<br>  &#125;,<br>  <span class="hljs-attr">plugins</span>: [<span class="hljs-title function_">vue</span>()],<br>&#125;)<br><br><span class="hljs-comment">//tsconfig.json</span><br>&#123;<br>  <span class="hljs-string">&quot;paths&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;@/*&quot;</span>: [<span class="hljs-string">&quot;src/*&quot;</span>],<br>    <span class="hljs-string">&quot;store/*&quot;</span>: [<span class="hljs-string">&quot;src/store/*&quot;</span>]<br>  &#125;,<br>  <span class="hljs-string">&quot;scrict&quot;</span>: <span class="hljs-literal">false</span>,              <span class="hljs-comment">//关闭后才可使用js文件</span><br>&#125;<br></code></pre></td></tr></table></figure><p>插件</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-comment">//yarn add unplugin-auto-import -d    //自动导入vue和vue-router相关函数(如ref、reactive)</span><br><span class="hljs-comment">//vite.config.ts</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">AutoImport</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;unplugin-auto-import/vite&quot;</span>;<br><span class="hljs-attr">plugins</span>: [<br>    <span class="hljs-title class_">AutoImport</span>(&#123;<br>        <span class="hljs-attr">imports</span>: [<span class="hljs-string">&quot;vue&quot;</span>, <span class="hljs-string">&quot;vue-router&quot;</span>],    <br>        <span class="hljs-attr">dts</span>: <span class="hljs-string">&quot;src/auto-import.d.ts&quot;</span>,<br>    &#125;),<br>],<br><br><span class="hljs-comment">//yarn add unplugin-vue-components -d     //自动引入组件(无需import)</span><br><span class="hljs-comment">//vite.config.ts</span><br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">ElementPlusResolver</span>&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;unplugin-vue-components/resolvers&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Components</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;unplugin-vue-components/vite&#x27;</span><br><span class="hljs-attr">plugins</span>: [<br>  <span class="hljs-title class_">Components</span>(&#123;<br>    <span class="hljs-attr">dirs</span>: [<span class="hljs-string">&#x27;src/components&#x27;</span>],       <span class="hljs-comment">//配置需要自动导入的目录，是否自动引入样式、Icon</span><br>    <span class="hljs-attr">resolvers</span>: [<span class="hljs-title class_">ElementPlusResolver</span>()]<br>  &#125;)<br>]<br><br><span class="hljs-comment">//yarn add vite-plugin-restart -d      //监听指定文件(若更新则重启服务器)</span><br><br><span class="hljs-attr">plugins</span>: [<br>  <span class="hljs-title class_">ViteRestart</span>(&#123;<br>    <span class="hljs-attr">restart</span>: [<br>      <span class="hljs-string">&#x27;vite.config.js&#x27;</span>,<br>    ]<br>  &#125;)<br>],<br></code></pre></td></tr></table></figure><p>跨域</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-comment">//vue.config.js</span><br><span class="hljs-comment">//比如本地域名(localhost:8080)、请求域名(127.0.0.1:3000/login)。请求地址写http://localhost:8080/login</span><br><span class="hljs-attr">devServer</span>: &#123;<br>    <span class="hljs-attr">proxy</span>: <span class="hljs-string">&#x27;http://localhost:3000&#x27;</span>            <span class="hljs-comment">//主机+请求端口</span><br>&#125;<br>-------------------------------------------<br><span class="hljs-comment">//请求多个服务器。请求地址写http://localhost:8080/api/login(如果此地址不写/api则不走代理)</span><br><span class="hljs-attr">devServer</span>: &#123;<br>    <span class="hljs-attr">proxy</span>: &#123;<br>        <span class="hljs-string">&#x27;/api&#x27;</span>: &#123;                             <span class="hljs-comment">//路径前缀</span><br>            <span class="hljs-attr">target</span>: <span class="hljs-string">&#x27;http://127.0.0.1:3000&#x27;</span>,<br>            <span class="hljs-attr">pathRewrite</span>:&#123;<span class="hljs-string">&#x27;^/api&#x27;</span>:<span class="hljs-string">&#x27;&#x27;</span>&#125;,<br>            <span class="hljs-attr">changeOrigin</span>: <span class="hljs-literal">true</span>,<br>            <span class="hljs-attr">secure</span>: <span class="hljs-literal">false</span>,                    <span class="hljs-comment">//https接口需要配置该参数</span><br>            <span class="hljs-attr">ws</span>: <span class="hljs-literal">true</span>,                         <span class="hljs-comment">//支持websocket</span><br>        &#125;,<br>    &#125;<br>&#125;<br><br><span class="hljs-comment">//vite.config.ts</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title function_">defineConfig</span>(&#123;<br>    <span class="hljs-attr">server</span>: &#123;<br>        <span class="hljs-attr">proxy</span>: &#123;<br>            <span class="hljs-string">&quot;/api&quot;</span>: &#123;<br>                <span class="hljs-attr">target</span>: <span class="hljs-string">&quot;https://my-cloudmusic.vercel.app/&quot;</span>,<br>                <span class="hljs-attr">changeOrigin</span>: <span class="hljs-literal">true</span>,<br>                <span class="hljs-attr">rewrite</span>: <span class="hljs-function">(<span class="hljs-params">path</span>) =&gt;</span> path.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/^\/api/</span>, <span class="hljs-string">&quot;&quot;</span>),<br>            &#125;,<br>        &#125;,<br>    &#125;,<br>&#125;)<br><br><span class="hljs-comment">//App.vue</span><br>axios.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/api/personalized?limit=8&#x27;</span>)<br></code></pre></td></tr></table></figure><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><blockquote><p>vue文件可写多个script标签，但<code>&lt;script&gt;</code>要与<code>&lt;script setup&gt;</code>的<em>lang</em>值一致</p></blockquote><blockquote><p>setup语法糖定义的变量、函数，引入的组件可直接使用，不能使用this</p></blockquote><blockquote><p>变量需用<code>ref（基本数据）|reactive（引用数据）</code>定义</p></blockquote><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&lt;<span class="hljs-title class_">Demo</span> <span class="hljs-meta">@click</span>=<span class="hljs-string">&#x27;fun&#x27;</span>&gt;&#123;&#123; name &#125;&#125;&lt;/<span class="hljs-title class_">Demo</span>&gt;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span>&gt;</span><span class="language-javascript"></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Demo</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/components/Demo&#x27;</span>;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">import</span> &#123; reactive, ref &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">const</span> name = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&quot;hello&quot;</span>);</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> axios.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;url&#x27;</span>);       <span class="hljs-comment">//setup默认是async</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">const</span> <span class="hljs-title function_">fun</span> = (<span class="hljs-params"></span>) =&gt; &#123;                       <span class="hljs-comment">//异步函数</span></span></span><br><span class="language-javascript"><span class="language-xml">    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(name.<span class="hljs-property">value</span>);</span></span><br><span class="language-javascript"><span class="language-xml">&#125;</span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>响应式</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&lt;p&gt;&#123;&#123; name + age &#125;&#125;&lt;<span class="hljs-regexp">/p&gt;                  /</span><span class="hljs-regexp">/插值(vue属性、js表达式)，undefined不被渲染</span><br><span class="hljs-regexp"></span><br><span class="hljs-regexp">import &#123; toRef, toRefs &#125; from &#x27;vue&#x27;;</span><br><span class="hljs-regexp">const user = reactive(&#123;</span><br><span class="hljs-regexp">    name: &#x27;wang&#x27;;</span><br><span class="hljs-regexp">    age: 19</span><br><span class="hljs-regexp">&#125;);</span><br><span class="hljs-regexp">const age = toRef(user, &#x27;age&#x27;);</span><br><span class="hljs-regexp">const &#123;name, age&#125; = toRefs(user);        /</span><span class="hljs-regexp">/解构</span><br></code></pre></td></tr></table></figure><p>指令</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&lt;ul&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&#x27;(v,i) in obj&#x27;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&#x27;v.id&#x27;</span>&gt;</span>    //遍历数组|对象(可用of代替in)</span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>&#123;&#123; v.name &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br>&lt;/ul&gt;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&#x27;seen&#x27;</span>&gt;</span>                   //虚拟标签，只能搭配v-if|v-for(前者优先于后者)</span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;login&quot;</span>/&gt;</span>     //key标签独立性，搭配v-if|v-for使用  </span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-else</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;register&quot;</span>/&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-show</span>=<span class="hljs-string">&#x27;isShow = !isShow&#x27;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>     <span class="hljs-comment">//显示与隐藏(等同于display:none)</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">v-once</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span>                <span class="hljs-comment">//插值只响应一次(初始化)</span><br></code></pre></td></tr></table></figure><p>自定义样式</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&lt;p v-attr=<span class="hljs-string">&quot;values&quot;</span>&gt;hello world&lt;/p&gt;<br><br><span class="hljs-keyword">const</span> values = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&quot;red&quot;</span>);<br><span class="hljs-keyword">const</span> vAttr = &#123;<br>    <span class="hljs-title function_">mounted</span>(<span class="hljs-params">e: <span class="hljs-built_in">any</span>, b: <span class="hljs-built_in">any</span></span>) &#123;<br>        e.<span class="hljs-property">style</span>.<span class="hljs-property">backgroundColor</span> = b.<span class="hljs-property">value</span>;<br>    &#125;,<br>&#125;;<br></code></pre></td></tr></table></figure><h2 id="事件"><a href="#事件" class="headerlink" title="事件"></a>事件</h2><blockquote><p>修饰符：<code>prevent</code>阻止默认行为、<code>stop</code>阻止事件冒泡、<code>capture</code>事件捕获、<code>self</code>只触发自身事件(不含子元素)、<code>once</code>事件只触发一次<br>修饰符可以链式触发但有顺序之分</p></blockquote><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&lt;button <span class="hljs-meta">@click</span>=<span class="hljs-string">&quot;fun(&#x27;hello&#x27;,$event)&quot;</span>&gt;传参&lt;<span class="hljs-regexp">/button&gt;   /</span><span class="hljs-regexp">/传参且需要e属性时$event必须加上；无参时可不写()且e能直接获取</span><br><span class="hljs-regexp">&lt;button @[eventName]=&quot;fun&quot;&gt;动态事件&lt;/</span>button&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> @<span class="hljs-attr">click.self.prevent</span>&gt;</span>修饰符<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span>          <span class="hljs-comment">//可不指定函数，单纯改变某种行为</span><br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">fun</span> = (<span class="hljs-params">v, e</span>) =&gt; &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e.<span class="hljs-property">target</span>.<span class="hljs-property">name</span>);<br>&#125;<br></code></pre></td></tr></table></figure><p>键盘事件</p><blockquote><p>事件：<code>keydown和keyup</code><br>基本修饰符：enter、esc、space、delete(删除&amp;退格)、方向键、鼠标键<br>组合修饰符：ctrl、alt、shift，keydown能正常触发，keyup需再配合其他按键才能触发</p></blockquote><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&lt;input <span class="hljs-keyword">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-meta">@keyup</span>.<span class="hljs-property">ctrl</span>.<span class="hljs-property">y</span>=<span class="hljs-string">&quot;fun&quot;</span>&gt; <br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">fun</span> = (<span class="hljs-params">e</span>) =&gt; &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(e.<span class="hljs-property">key</span>,e.<span class="hljs-property">keyCode</span>);       <span class="hljs-comment">//y 89</span><br>&#125;<br></code></pre></td></tr></table></figure><p>获取DOM元素</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&lt;div ref=<span class="hljs-string">&quot;title&quot;</span>&gt;&lt;/div&gt;<br><br><span class="hljs-keyword">const</span> title = ref&lt;<span class="hljs-title class_">HTMLElement</span> | <span class="hljs-literal">null</span>&gt;(<span class="hljs-literal">null</span>);        <span class="hljs-comment">//ts写法，ref(null)为js写法</span><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">fun</span>() =&gt; &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(title.<span class="hljs-property">value</span>.<span class="hljs-property">style</span>.<span class="hljs-property">color</span>);           <span class="hljs-comment">//获取标签颜色</span><br>&#125;;<br></code></pre></td></tr></table></figure><p>生命周期</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-title function_">onBeforeMount</span>(<span class="hljs-params"></span>)&#123;&#125;,         <span class="hljs-comment">//组件挂载之前(模板已编译但尚未渲染到页面)</span><br><span class="hljs-title function_">onMounted</span>(<span class="hljs-params"></span>)&#123;&#125;,             <span class="hljs-comment">//挂载完成(操作DOM，发送请求、消息订阅，开启定时器等)</span><br><br><span class="hljs-title function_">onBeforeUpdate</span>(<span class="hljs-params"></span>)&#123;&#125;,        <span class="hljs-comment">//组件更新之前</span><br><span class="hljs-title function_">onUpdated</span>(<span class="hljs-params"></span>)&#123;&#125;,<br><br><span class="hljs-title function_">onBeforeUnmount</span>(<span class="hljs-params"></span>)&#123;&#125;,       <span class="hljs-comment">//组件卸载之前</span><br><span class="hljs-title function_">onUnmounted</span>(<span class="hljs-params"></span>)&#123;&#125;,<br><br><span class="hljs-title function_">onErrorCaptured</span>(<span class="hljs-params"></span>)&#123;&#125;,       <span class="hljs-comment">//后代组件报错时调用</span><br><br><span class="hljs-keyword">import</span> &#123; onMounted &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span><br><span class="hljs-title function_">onMounted</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    ……<br>&#125;)<br></code></pre></td></tr></table></figure><h1 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h1><h2 id="数据绑定"><a href="#数据绑定" class="headerlink" title="数据绑定"></a>数据绑定</h2><p>单向绑定</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&lt;p :style=<span class="hljs-string">&quot;sty&quot;</span> :<span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;clas&quot;</span> <span class="hljs-keyword">class</span>=<span class="hljs-string">&quot;one&quot;</span>&gt;hello world&lt;<span class="hljs-regexp">/p&gt;      /</span><span class="hljs-regexp">/两个类名不冲突    </span><br><span class="hljs-regexp">&lt;a :[Url.href]=&quot;Url.link&quot;&gt;链接&lt;/</span>a&gt;                             <span class="hljs-comment">//动态属性</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">:disable</span>=<span class="hljs-string">&quot;isDisabled&quot;</span>&gt;</span>按钮<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span></span>                    <span class="hljs-comment">//指令(js表达式、vue属性)</span><br><br><span class="hljs-keyword">const</span> <span class="hljs-title class_">Url</span> = <span class="hljs-title function_">reactive</span>(&#123;<br>    <span class="hljs-attr">link</span>: <span class="hljs-string">&quot;https://baidu.com&quot;</span>,<br>    <span class="hljs-attr">attr</span>: <span class="hljs-string">&quot;href&quot;</span>,<br>&#125;);<br><span class="hljs-keyword">const</span> sty = <span class="hljs-title function_">reactive</span>(&#123;<br><span class="hljs-string">&#x27;font-family&#x27;</span>: <span class="hljs-string">&#x27;Song&#x27;</span>,<br>    <span class="hljs-attr">fontSize</span>: <span class="hljs-string">&#x27;24px&#x27;</span><br>&#125;);<br><span class="hljs-keyword">const</span> clas = <span class="hljs-title function_">reactive</span>(&#123;<br><span class="hljs-attr">active</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">static</span>: <span class="hljs-literal">false</span><br>&#125;)<br><span class="hljs-keyword">const</span> isDisabled = <span class="hljs-literal">false</span>;<br></code></pre></td></tr></table></figure><p>双向绑定</p><blockquote><p>双向绑定只适用于表单元素，推荐用<em>ElementPlus</em><br>修饰符：<code>number</code>数据转为数值型、<code>trim</code>过滤空格、<code>lazy</code>失去焦点后获取值(非实时获取)</p></blockquote><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&lt;form <span class="hljs-meta">@submit</span>.<span class="hljs-property">prevent</span>=<span class="hljs-string">&quot;submit&quot;</span>&gt;         <span class="hljs-comment">//修饰符，form默认会提交并跳转(阻止跳转行为)</span><br>&lt;input id=&quot;radio&quot; type=&quot;radio&quot; v-model=&quot;values&quot; value=&quot;men&quot;&gt;<br>&lt;label for=&quot;radio&quot;&gt;&#123;&#123; values &#125;&#125;&lt;/label&gt;<br><br>    &lt;input id=&quot;checkbox&quot; type=&quot;checkbox&quot; v-model=&quot;checkboxs&quot; value=&quot;liu&quot;&gt;<br>&lt;label for=&quot;checkbox&quot;&gt;&#123;&#123; checkeds &#125;&#125;&lt;/label&gt;<br>    &lt;input type=&quot;checkbox&quot; v-model=&quot;values&quot; true-value=&quot;yes&quot; false-value=&quot;no&quot;&gt;   //选中为yes，不选为no<br><br>    &lt;select v-model=&quot;values&quot;&gt;<br>        &lt;option disabled value=&quot;&quot;&gt;请选择&lt;/option&gt;<br>        &lt;option value=&quot;杭州&quot;&gt;杭州&lt;/option&gt;          //或者用v-for循环生成<br>    &lt;/select&gt;<br>&lt;/form&gt;<br><br>const checkboxs = ref([]);<br>const values = ref(&quot;&quot;);<br></code></pre></td></tr></table></figure><h2 id="数据传递"><a href="#数据传递" class="headerlink" title="数据传递"></a>数据传递</h2><p>父传子</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-comment">//App.vue</span><br>&lt;<span class="hljs-title class_">Demo</span> :name=<span class="hljs-string">&quot;name&quot;</span> msg=<span class="hljs-string">&quot;hello world&quot;</span> /&gt;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Demo</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./components/Demo.vue&quot;</span>;<br><span class="hljs-keyword">const</span> name = <span class="hljs-title function_">ref</span>(<span class="hljs-string">&quot;wang&quot;</span>);<br><br><span class="hljs-comment">//Demo.vue</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>&#123;&#123; name + msg &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><br><span class="hljs-keyword">import</span> &#123; defineProps &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">const</span> props = defineProps&lt;&#123;            <span class="hljs-comment">//ts写法，defineProps(&#123;……&#125;)为js写法</span><br>    <span class="hljs-attr">name</span>: <span class="hljs-built_in">string</span>,                      <span class="hljs-comment">//多个类型可写成数组</span><br><span class="hljs-attr">msg</span>: <span class="hljs-built_in">string</span><br>&#125;&gt;();<br></code></pre></td></tr></table></figure><p>子传父</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-comment">//App.vue</span><br>&lt;<span class="hljs-title class_">Demo</span> <span class="hljs-meta">@name</span>=<span class="hljs-string">&quot;fun&quot;</span> /&gt;<br><span class="hljs-keyword">const</span> <span class="hljs-title function_">fun</span> = (<span class="hljs-params">v</span>) =&gt; &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(v);<br>&#125;<br><br><span class="hljs-comment">//Demo.vue</span><br><span class="hljs-keyword">import</span> &#123; defineEmits &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">const</span> emit = defineEmits&lt;&#123;                 <span class="hljs-comment">//ts写法，defineEmits([&#x27;name&#x27;])为js写法</span><br>    (<span class="hljs-attr">e</span>: <span class="hljs-string">&quot;title&quot;</span>, <span class="hljs-attr">value</span>: <span class="hljs-built_in">any</span>): <span class="hljs-built_in">void</span>;<br>&#125;&gt;();<br><span class="hljs-keyword">const</span> <span class="hljs-title function_">funs</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>    <span class="hljs-title function_">emit</span>(<span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-string">&quot;wang&quot;</span>);<br>&#125;;<br></code></pre></td></tr></table></figure><p>父传后代</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-comment">//App.vue</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Demo</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./components/Demo.vue&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; provide &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;<br><span class="hljs-keyword">const</span> user = <span class="hljs-title function_">reactive</span>(&#123;<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;wang&#x27;</span>,<br>    <span class="hljs-attr">age</span>: <span class="hljs-number">19</span><br>&#125;);<br><span class="hljs-title function_">provide</span>(<span class="hljs-string">&#x27;user&#x27;</span>, user);          <span class="hljs-comment">//向后代组件传递响应数据(可更改)，向子组件传递请用props</span><br><br><span class="hljs-comment">//Demo.vue</span><br><span class="hljs-keyword">import</span> &#123; inject &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;<br><span class="hljs-keyword">const</span> user = <span class="hljs-title function_">inject</span>(<span class="hljs-string">&#x27;user&#x27;</span>);<br></code></pre></td></tr></table></figure><p>兄弟互传</p><blockquote><p>必须由父组件关联他们</p></blockquote><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-number">1.</span> vuex传递数据<br><span class="hljs-number">2.</span> mitt需提前安装<br><span class="hljs-comment">//plugins/mitt.ts</span><br><span class="hljs-keyword">import</span> mitt <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;mitt&quot;</span>;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title function_">mitt</span>();<br><br><span class="hljs-comment">//Student.vue</span><br><span class="hljs-keyword">import</span> emitter <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../plugins/mitt&quot;</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-title function_">fun</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>    emitter.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&quot;name&quot;</span>, title);<br>&#125;<br><br><span class="hljs-comment">//School.vue</span><br><span class="hljs-keyword">import</span> emitter <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../plugins/mitt&quot;</span>;<br>emitter.<span class="hljs-title function_">on</span>(<span class="hljs-string">&quot;name&quot;</span>, <span class="hljs-function">(<span class="hljs-params">e: <span class="hljs-built_in">any</span></span>) =&gt;</span> &#123;<br>    title.<span class="hljs-property">value</span> = e.<span class="hljs-property">value</span>;<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="计算与侦听"><a href="#计算与侦听" class="headerlink" title="计算与侦听"></a>计算与侦听</h2><p>计算</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> &#123; computed &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;<br><span class="hljs-keyword">const</span> fullName = <span class="hljs-title function_">computed</span>(&#123;<br>    <span class="hljs-title function_">get</span>(<span class="hljs-params"></span>)&#123;<br>        <span class="hljs-keyword">return</span> user.<span class="hljs-property">name</span> + user.<span class="hljs-property">age</span>;<br>    &#125;,<br>    <span class="hljs-title function_">set</span>(<span class="hljs-params">value</span>)&#123;<br>        user.<span class="hljs-property">name</span> = value<br>    &#125;<br>&#125;);<br>---------------------------------<br><span class="hljs-keyword">const</span> fullName = <span class="hljs-title function_">computed</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> user.<span class="hljs-property">name</span> + user.<span class="hljs-property">age</span>;<br>&#125;)<br></code></pre></td></tr></table></figure><p>数组</p><blockquote><p>添加响应式数组：<code>push、pop、shift、unshift、splice、sort、reverse</code><br>过滤响应式数组：<code>filter、concat、slice</code></p></blockquote><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&lt;ul&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;v in arrs &quot;</span>&gt;</span>&#123;&#123; v &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br>&lt;/ul&gt;<br><br><span class="hljs-keyword">const</span> arr = <span class="hljs-title function_">reactive</span>([<span class="hljs-string">&#x27;wang&#x27;</span>, <span class="hljs-string">&#x27;liu&#x27;</span>, <span class="hljs-string">&#x27;li&#x27;</span>]);<br>arr.<span class="hljs-title function_">push</span>(<span class="hljs-string">&#x27;lei&#x27;</span>);<br><span class="hljs-keyword">const</span> arrs = <span class="hljs-title function_">computed</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> arr.<span class="hljs-title function_">filter</span>(<span class="hljs-function"><span class="hljs-params">v</span> =&gt;</span> &#123;<br>        <span class="hljs-keyword">return</span> v.<span class="hljs-property">length</span> &gt; <span class="hljs-number">2</span>;<br>    &#125;)<br>&#125;);<br></code></pre></td></tr></table></figure><p>侦听</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> &#123; watch, watchEffect &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;<br><span class="hljs-keyword">const</span> fullName = <span class="hljs-title function_">ref</span>();<br><span class="hljs-title function_">watch</span>(user, <span class="hljs-function">(<span class="hljs-params">newV, oldV</span>) =&gt;</span> &#123;         <span class="hljs-comment">//侦听多个转换成数组</span><br>    fullName.<span class="hljs-property">value</span> = newV.<span class="hljs-property">name</span>;       <span class="hljs-comment">//reactive的oldValue不能正常获取(bug)</span><br>&#125;,&#123;<span class="hljs-attr">immediate</span>: <span class="hljs-literal">true</span>&#125;)                  <span class="hljs-comment">//初始化立即执行</span><br><br><span class="hljs-title function_">watch</span>(<span class="hljs-function">() =&gt;</span> user.<span class="hljs-property">sex</span>, <span class="hljs-function">(<span class="hljs-params">newV, oldV</span>) =&gt;</span> &#123;<br>    fullName.<span class="hljs-property">value</span> = newV;      <br>&#125;,&#123;<span class="hljs-attr">deep</span>: <span class="hljs-literal">true</span>&#125;)                       <span class="hljs-comment">//多层级监视</span><br><br><span class="hljs-keyword">const</span> stop = <span class="hljs-title function_">watchEffect</span>(<span class="hljs-function">() =&gt;</span> &#123;      <span class="hljs-comment">//不指定具体监听对象，在函数使用了哪些属性就监听哪些属性(user.name)</span><br>    fullName.<span class="hljs-property">value</span> = user.<span class="hljs-property">name</span>;<br>    <span class="hljs-title function_">stop</span>();                           <span class="hljs-comment">//停止监听</span><br>&#125;)<br></code></pre></td></tr></table></figure><h2 id="Pinia"><a href="#Pinia" class="headerlink" title="Pinia"></a>Pinia</h2><blockquote><p><em>getters</em>类似于计算属性，经过计算返回新的结果；<em>actions</em>类似于方法(同步|异步)，操控逻辑<br>Nuxt使用pinia前请到官网详解</p></blockquote><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-comment">//安装pinia</span><br><br><span class="hljs-comment">//stores/store.js</span><br><span class="hljs-keyword">import</span> &#123; createPinia &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;pinia&quot;</span>;<br><span class="hljs-keyword">const</span> pinia = <span class="hljs-title function_">createPinia</span>();<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> pinia;<br><br><span class="hljs-comment">//main.js</span><br><span class="hljs-keyword">import</span> pinia <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./stores/store&quot;</span>;<br>app.<span class="hljs-title function_">use</span>(pinia);<br><br><span class="hljs-comment">//stores/user.js</span><br><span class="hljs-keyword">import</span> &#123; defineStore &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;pinia&quot;</span>;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> useUserStore = <span class="hljs-title function_">defineStore</span>(<span class="hljs-string">&quot;users&quot;</span>, &#123;        <span class="hljs-comment">//唯一id</span><br>    <span class="hljs-attr">state</span>: <span class="hljs-function">() =&gt;</span> &#123;<br>        <span class="hljs-keyword">return</span> &#123;<br>            <span class="hljs-attr">userName</span>: <span class="hljs-string">&quot;wang&quot;</span>,<br>            <span class="hljs-attr">userAge</span>: <span class="hljs-number">19</span>,<br><span class="hljs-attr">list</span>: []<br>        &#125;;<br>    &#125;,<br><span class="hljs-attr">getters</span>: &#123;<br>        <span class="hljs-attr">getFullName</span>: <span class="hljs-function">(<span class="hljs-params">state</span>) =&gt;</span> &#123;<br>            <span class="hljs-keyword">return</span> state.<span class="hljs-property">userName</span> + <span class="hljs-variable language_">this</span>.<span class="hljs-property">getAddAge</span>;    <span class="hljs-comment">//调用其他getter</span><br>        &#125;,<br><span class="hljs-attr">getFullAge</span>: <span class="hljs-function">(<span class="hljs-params">state</span>) =&gt;</span> &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-function">(<span class="hljs-params">age</span>) =&gt;</span> state.<span class="hljs-property">userName</span> + age;     <span class="hljs-comment">//传参</span><br>        &#125;,<br>    &#125;,<br><span class="hljs-attr">actions</span>: &#123;<br>        <span class="hljs-title function_">count</span>(<span class="hljs-params">age</span>) &#123;<br>            <span class="hljs-variable language_">this</span>.<span class="hljs-property">userAge</span> += age;<br>        &#125;,<br>    &#125;,<br>&#125;);<br><br><span class="hljs-comment">//App.vue</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>&#123;&#123; getFullAge(20) &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><br><span class="hljs-keyword">import</span> &#123; useUserStore &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/stores/user&quot;</span>;<br><span class="hljs-keyword">const</span> store = <span class="hljs-title function_">useUserStore</span>();<br><br><span class="hljs-keyword">import</span> &#123; storeToRefs &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;pinia&quot;</span>;<br><span class="hljs-keyword">const</span> &#123; userName, userAge, getFullName, count &#125; = <span class="hljs-title function_">storeToRefs</span>(store);    <span class="hljs-comment">//解构方式获取</span><br><br>store.<span class="hljs-property">userName</span> = <span class="hljs-string">&#x27;liu&#x27;</span>                                <span class="hljs-comment">//修改数据</span><br>store.$patch(<span class="hljs-function">(<span class="hljs-params">state</span>) =&gt;</span> &#123;                             <span class="hljs-comment">//批量添加|修改数据(速度更快)</span><br>state.<span class="hljs-property">userName</span> = <span class="hljs-string">&quot;liu&quot;</span>;<br>state.<span class="hljs-property">userAge</span> ++;<br>    state.<span class="hljs-property">list</span>.<span class="hljs-title function_">push</span>(&#123;<br>……<br>    &#125;)<br>&#125;);<br><br>store.$reset();                                       <span class="hljs-comment">//重置数据</span><br>sotre.<span class="hljs-title function_">count</span>(<span class="hljs-number">100</span>);<br></code></pre></td></tr></table></figure><p>router使用pinia</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-comment">//routers/index.js</span><br><span class="hljs-keyword">import</span> pinia <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../stores/store&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; useUserStore &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../stores/user&quot;</span>;<br><span class="hljs-keyword">const</span> store = <span class="hljs-title function_">useUser</span>(pinia);<br></code></pre></td></tr></table></figure><p>持续化存储</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-comment">//安装pinia-plugin-persist</span><br><br><span class="hljs-comment">//stores/store.js</span><br><span class="hljs-keyword">import</span> piniaPluginPersist <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;pinia-plugin-persist&#x27;</span><br>pinia.<span class="hljs-title function_">use</span>(piniaPluginPersist)<br><br><span class="hljs-comment">//stores/user.js</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> useUserStore = <span class="hljs-title function_">defineStore</span>(<span class="hljs-string">&quot;user&quot;</span>, &#123;<br>  <span class="hljs-attr">state</span>: <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-keyword">return</span> &#123;<br>      <span class="hljs-attr">userName</span>: <span class="hljs-string">&quot;wang&quot;</span>,<br>    &#125;<br>  &#125;,<br>  <span class="hljs-attr">persist</span>: &#123;        <br>    <span class="hljs-attr">enabled</span>: <span class="hljs-literal">true</span>,         <span class="hljs-comment">//开启数据缓存</span><br><span class="hljs-attr">strategies</span>: [          <span class="hljs-comment">//指定缓存内容</span><br>    &#123;<br><span class="hljs-attr">key</span>: <span class="hljs-string">&#x27;user&#x27;</span>,<br>      <span class="hljs-attr">storage</span>: <span class="hljs-variable language_">localStorage</span>,<br>      <span class="hljs-attr">paths</span>: [<span class="hljs-string">&#x27;userName&#x27;</span>, <span class="hljs-string">&#x27;userAge&#x27;</span>]<br>    &#125;<br>  ]        <br>  &#125;<br>&#125;)<br></code></pre></td></tr></table></figure><h1 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h1><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&lt;template&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">:class</span>=<span class="hljs-string">&quot;$style.title&quot;</span>&gt;</span>引用cssModule<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Demo</span> /&gt;</span></span><br>&lt;/template&gt;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">setup</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;ts&quot;</span>&gt;</span><span class="language-javascript">               <span class="hljs-comment">//编译方式</span></span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">import</span> &#123; defineAsyncComponent &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span>;</span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">import</span> <span class="hljs-title class_">Demo</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./components/Demo&quot;</span>; </span></span><br><span class="language-javascript"><span class="language-xml"><span class="hljs-keyword">const</span> <span class="hljs-title class_">Demo</span> = <span class="hljs-title function_">defineAsyncComponent</span>(<span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">&quot;./components/Demo.vue&quot;</span>)); <span class="hljs-comment">//懒加载组件，并会打包成单独的文件</span></span></span><br><span class="language-javascript"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><br><span class="hljs-comment">//scoped(解决父子组件类名冲突，限制css作用域)|module(能在控制台快速定位，但引用麻烦)</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;less&quot;</span> <span class="hljs-attr">scoped</span>|<span class="hljs-attr">module</span>&gt;</span><span class="language-css">    </span></span><br><span class="language-css"><span class="language-xml"><span class="hljs-selector-class">.title</span> &#123;</span></span><br><span class="language-css"><span class="language-xml">    <span class="hljs-attribute">color</span>: <span class="hljs-string">&#x27;skyblue&#x27;</span>;</span></span><br><span class="language-css"><span class="language-xml">&#125;</span></span><br><span class="language-css"><span class="language-xml"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br><br><span class="hljs-comment">//main.js</span><br><span class="hljs-keyword">import</span> &#123; createApp &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./App.vue&quot;</span>;<br><span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>(<span class="hljs-title class_">App</span>);<br>                       <span class="hljs-comment">//错误信息 实例 出错组件</span><br>app.<span class="hljs-property">config</span>.<span class="hljs-property">warnHandler</span> = <span class="hljs-function">(<span class="hljs-params">msg, vm, trace</span>) =&gt;</span> &#123;&#125;;       <span class="hljs-comment">//组件报错时执行</span><br>app.<span class="hljs-property">config</span>.<span class="hljs-property">errorHandler</span> = <span class="hljs-function">(<span class="hljs-params">err, vm, info</span>) =&gt;</span> &#123;&#125;；      <span class="hljs-comment">//请求报错时执行</span><br><br>app.<span class="hljs-title function_">mount</span>(<span class="hljs-string">&quot;#app&quot;</span>);<br>app.<span class="hljs-title function_">use</span>(router);<br></code></pre></td></tr></table></figure><p>单独引入和组件缓存</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&lt;template src=<span class="hljs-string">&quot;./template.html&quot;</span>&gt;&lt;/template&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./style.css&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./script.ts&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span></span><br><br><span class="hljs-comment">//App.vue</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">KeepAlive</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Demo</span> /&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">component</span> <span class="hljs-attr">:is</span>=<span class="hljs-string">&quot;Demo&quot;</span> /&gt;</span>               //两者皆可</span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">KeepAlive</span>&gt;</span></span><br><br><span class="hljs-comment">//Demo.vue</span><br><span class="hljs-keyword">import</span> &#123; onActivated &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue&quot;</span>;         <span class="hljs-comment">//组件被缓存时调用</span><br><span class="hljs-title function_">onActivated</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    ……<br>&#125;);<br></code></pre></td></tr></table></figure><h2 id="插槽"><a href="#插槽" class="headerlink" title="插槽"></a>插槽</h2><p>插槽</p><blockquote><p>父组件向子组件插入Html元素</p></blockquote><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-comment">//App.vue</span><br>&lt;<span class="hljs-title class_">Demo</span>&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">list</span>&gt;</span>  </span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>hello world<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> #[<span class="hljs-attr">slotName</span>]&gt;</span>             //动态插槽</span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>hello world<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br>&lt;/<span class="hljs-title class_">Demo</span>&gt;<br><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Demo</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./components/Demo.vue&quot;</span><br><br><span class="hljs-comment">//Demo.vue</span><br>&lt;slot name=<span class="hljs-string">&quot;list&quot;</span>&gt;默认值&lt;/slot&gt;<br></code></pre></td></tr></table></figure><p>作用域插槽</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-comment">//App.vue</span><br>&lt;<span class="hljs-title class_">Demo</span>&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span> <span class="hljs-attr">v-slot</span>=<span class="hljs-string">&quot;lists&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(v, i) in lists.list&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;i&quot;</span>&gt;</span>&#123;&#123; v &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br>&lt;/<span class="hljs-title class_">Demo</span>&gt;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Demo</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;./components/Demo.vue&quot;</span><br><br><span class="hljs-comment">//Demo.vue</span><br>&lt;slot :list=<span class="hljs-string">&quot;arr&quot;</span>&gt;默认值&lt;<span class="hljs-regexp">/slot&gt;         /</span><span class="hljs-regexp">/仅可向插槽传递数据(可传多个)</span><br></code></pre></td></tr></table></figure><p>传递组件</p><blockquote><p>子向父传递组件</p></blockquote><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-comment">//Demo.vue</span><br>&lt;<span class="hljs-title class_">ClientOnly</span>&gt;<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">teleport</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;.main&quot;</span>&gt;</span>        //传送到父组件main标签内</span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>hello world<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">teleport</span>&gt;</span></span><br>&lt;/<span class="hljs-title class_">ClientOnly</span>&gt;<br><br><span class="hljs-comment">//App.vue</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;main&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>      //必须在Demo组件之前</span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">Demo</span> /&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span></span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Demo</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./Demo&#x27;</span>;<br></code></pre></td></tr></table></figure><h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><p>组合式函数</p><blockquote><p>封装和复用，代替Mixin</p></blockquote><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-comment">//hooks/useAdd.js</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">function</span> (<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">return</span> a + b;<br>&#125;<br><span class="hljs-comment">//App.vue</span><br><span class="hljs-keyword">import</span> useAdd <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/Hooks/useAdd.js&quot;</span>;<br><span class="hljs-keyword">const</span> val = <span class="hljs-title function_">useAdd</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>);<br><br>---------------------------------------<br><span class="hljs-comment">//hooks/useCalc.js</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">useAdd</span>(<span class="hljs-params">a, b</span>) &#123; <br>    <span class="hljs-keyword">return</span> a + b;<br>&#125;<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">useSub</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">return</span> a - b;<br>&#125;<br><br><span class="hljs-comment">//App.vue</span><br><span class="hljs-keyword">import</span> &#123; useAdd, useSub &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/Hooks/useCalc.js&quot;</span>;<br><span class="hljs-keyword">const</span> add= <span class="hljs-title function_">useAdd</span>(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>);<br></code></pre></td></tr></table></figure><p>插件</p><blockquote><p>全局功能，对通用的属性进行封装</p></blockquote><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-comment">//plugins/i18n.js</span><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> &#123;<br>  <span class="hljs-attr">install</span>: <span class="hljs-function">(<span class="hljs-params">app, options</span>) =&gt;</span> &#123;        <span class="hljs-comment">//options是传递的参数</span><br>    <span class="hljs-comment">// 在这里编写插件代码</span><br>  &#125;<br>&#125;<br><br><span class="hljs-comment">//main.js</span><br><span class="hljs-keyword">import</span> i18n <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./plugins/i18n&#x27;</span><br>app.<span class="hljs-title function_">use</span>(i18n, &#123;<br>  <span class="hljs-attr">msg</span>: <span class="hljs-string">&#x27;Hello World!&#x27;</span><br>&#125;)<br></code></pre></td></tr></table></figure><h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-comment">// 安装vue-router</span><br><br><span class="hljs-comment">//main.js</span><br><span class="hljs-keyword">import</span> router <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@/routers&quot;</span>;<br>app.<span class="hljs-title function_">use</span>(router);<br><br><span class="hljs-comment">//routers/index.js</span><br><span class="hljs-keyword">import</span> &#123;createRouter, createWebHistory, createWebHashHistory&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-router&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Demo</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;../components/Demo.vue&quot;</span>;<br><br><span class="hljs-keyword">const</span> routes = [<br>    &#123;<br>        <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/&#x27;</span>,<br>        <span class="hljs-attr">redirect</span>: <span class="hljs-string">&#x27;/home&#x27;</span>             <span class="hljs-comment">//重定向(改变地址栏路径)</span><br>    &#125;,<br>    &#123;<br>        <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/demo&quot;</span>,<br>        <span class="hljs-attr">component</span>: <span class="hljs-title class_">Demo</span>,<br><span class="hljs-attr">children</span>: [<br>            &#123;<br>                <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;login&quot;</span>,       <span class="hljs-comment">//命名空间</span><br>                <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;login&quot;</span>,       <span class="hljs-comment">//子路由(path前无需加&quot;/&quot;)</span><br>                <span class="hljs-attr">component</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">&quot;@/components/Login.vue&quot;</span>),    <span class="hljs-comment">//路由懒加载(推荐)</span><br>            &#125;,<br>        ],<br>    &#125;,<br>&#123;                                <span class="hljs-comment">//404页面，此路由一定要放末尾</span><br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/:pathMatch(.*)*&quot;</span>,<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&quot;NotFound&quot;</span>,<br>    <span class="hljs-attr">component</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">&quot;@/components/404.vue&quot;</span>),<br>&#125;,<br>];<br><br><span class="hljs-keyword">const</span> router = <span class="hljs-title function_">createRouter</span>(&#123;<br>    <span class="hljs-attr">history</span>: <span class="hljs-title function_">createWebHistory</span>(<span class="hljs-string">&#x27;/admin&#x27;</span>),  <span class="hljs-comment">//路由模式(默认前缀)，createWebHashHistory是带#</span><br>    routes,<br>&#125;);<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> router;<br><br><span class="hljs-comment">//App.vue</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">router-link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;/demo&quot;</span> <span class="hljs-attr">tag</span>=<span class="hljs-string">&quot;div&quot;</span>&gt;</span>Demo<span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span></span>    <span class="hljs-comment">//替换标签(默认是a标签)</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">router-view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span></span>                               <span class="hljs-comment">//渲染路由</span><br><br><span class="hljs-comment">//Demo.vue</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">router-link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;/demo/login&quot;</span>&gt;</span>Login<span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">router-link</span> <span class="hljs-attr">:to</span>=<span class="hljs-string">&quot;&#123;name:&#x27;login&#x27;&#125;&quot;</span>&gt;</span>Login<span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span></span>     <span class="hljs-comment">//命名空间跳转</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">router-view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p>传参</p><blockquote><p><em>params</em>传参前必须用<code>name</code>命名空间指定；<em>path</em>是多层级时首个<em>“&#x2F;”</em>不写(如<code>path: &#39;demo/login&#39;</code>)</p></blockquote><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-comment">//routers/index.js</span><br><span class="hljs-keyword">const</span> routes = [<br>&#123;<br><span class="hljs-attr">name</span>: <span class="hljs-string">&quot;demo&quot;</span>,<br><span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/demo/:name&quot;</span>,      <span class="hljs-comment">//只适用于params传参</span><br>  <span class="hljs-attr">component</span>: <span class="hljs-title class_">Demo</span>,<br>&#125;<br>]<br><br><span class="hljs-comment">//App.vue</span><br>&lt;router-link :to=<span class="hljs-string">&quot;&#123;name: &#x27;demo&#x27;, params: &#123;name: &#x27;wang&#x27;&#125;&#125;&quot;</span>&gt;params传参&lt;/router-link&gt;<br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">router-link</span> <span class="hljs-attr">:to</span>=<span class="hljs-string">&quot;&#123;path: &#x27;demo/login&#x27;, query: &#123;id: 123&#125;&#125;&quot;</span>&gt;</span>query传参<span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span></span><br><br><span class="hljs-comment">//Demo.vue</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>&#123;&#123; $route.params.name + $route.query.id &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><br><span class="hljs-keyword">import</span> &#123; useRoute &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue-router&#x27;</span>;<br><span class="hljs-keyword">const</span> routeParams = <span class="hljs-title function_">useRoute</span>().<span class="hljs-property">params</span>;<br><span class="hljs-keyword">const</span> routeQuery = <span class="hljs-title function_">useRoute</span>().<span class="hljs-property">query</span>;<br></code></pre></td></tr></table></figure><p>跳转</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs tsx">&lt;router-link to=<span class="hljs-string">&quot;/&quot;</span> replace&gt;回首页&lt;<span class="hljs-regexp">/router-link&gt;      /</span><span class="hljs-regexp">/replace不会添加新历史记录</span><br><span class="hljs-regexp">&lt;button @click=&quot;$router.back()&quot;&gt;返回上一级&lt;/</span>button&gt;<br><br><span class="hljs-keyword">import</span> &#123; useRouter &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue-router&#x27;</span>;<br><span class="hljs-keyword">const</span> router = <span class="hljs-title function_">useRouter</span>();<br>router.<span class="hljs-property">push</span>|<span class="hljs-title function_">replace</span>(&#123;             <span class="hljs-comment">//不返回用replace，内是to属性的参数</span><br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;demo/login&#x27;</span><br>&#125;)<br>router.<span class="hljs-title function_">go</span>(-<span class="hljs-number">1</span>);                    <span class="hljs-comment">//跳转历史记录</span><br></code></pre></td></tr></table></figure><p>路由守卫</p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-comment">//routers/index.js</span><br><span class="hljs-comment">//独享路由守卫（只在进入路由时触发，不会在params、query 等改变时触发）</span><br><span class="hljs-keyword">const</span> routes = [<br>&#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/demo&quot;</span>,<br><span class="hljs-attr">component</span>: <span class="hljs-title class_">Demo</span>,<br><span class="hljs-attr">meta</span>: &#123; <span class="hljs-attr">needLogin</span>: <span class="hljs-literal">true</span> &#125;,         <span class="hljs-comment">//路由元信息</span><br><span class="hljs-attr">beforeEnter</span>: <span class="hljs-function">(<span class="hljs-params">to, <span class="hljs-keyword">from</span>, next</span>) =&gt;</span> &#123;<br>            <span class="hljs-keyword">if</span> (to.<span class="hljs-property">meta</span>.<span class="hljs-property">needLogin</span>) &#123;<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;需要登录&quot;</span>);<br>                <span class="hljs-title function_">next</span>();<br>            &#125;<br>        &#125;,<br>&#125;,<br>];<br><br><span class="hljs-comment">//全局路由守卫（优于独享和组件）</span><br>router.<span class="hljs-title function_">beforeEach</span>(<span class="hljs-function">(<span class="hljs-params">to, <span class="hljs-keyword">from</span>, next</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (to.<span class="hljs-property">meta</span>.<span class="hljs-property">needLogin</span>) &#123;            <span class="hljs-comment">//若没有登录则跳转到login页面</span><br>        <span class="hljs-keyword">return</span> &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&quot;/login&quot;</span> &#125;;      <span class="hljs-comment">//return false取消导航</span><br>    &#125;<br>&#125;);<br><br><span class="hljs-comment">//组件路由守卫</span><br><span class="hljs-comment">//App.vue</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>&#123;&#123; $route.meta.title &#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br><span class="hljs-keyword">import</span> &#123; onBeforeRouteLeave &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;vue-router&quot;</span>;     <span class="hljs-comment">//离开当前组件前触发</span><br><br><span class="hljs-keyword">const</span> meta = router.<span class="hljs-property">currentRoute</span>.<span class="hljs-property">value</span>.<span class="hljs-property">meta</span>;<br><span class="hljs-keyword">const</span> route = <span class="hljs-title function_">useRoute</span>();<br><span class="hljs-title function_">onBeforeRouteUpdate</span>(<span class="hljs-function">(<span class="hljs-params">to, <span class="hljs-keyword">from</span>, next</span>) =&gt;</span> &#123;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(route.<span class="hljs-property">meta</span>);<br>    <span class="hljs-title function_">next</span>();<br>&#125;);<br></code></pre></td></tr></table></figure><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="UI库"><a href="#UI库" class="headerlink" title="UI库"></a>UI库</h2><p><a href="https://element-plus.gitee.io/">Elemnt-Plus</a></p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><br><span class="hljs-comment">//安装 </span><br>yarn add element-plus unplugin-vue-components unplugin-auto-<span class="hljs-keyword">import</span><br><br><span class="hljs-comment">//main.js</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">ElementPlus</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;element-plus&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;element-plus/dist/index.css&quot;</span>;<br>app.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ElementPlus</span>);<br><br><span class="hljs-comment">//vite.config.js</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">AutoImport</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;unplugin-auto-import/vite&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Components</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;unplugin-vue-components/vite&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">ElementPlusResolver</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;unplugin-vue-components/resolvers&quot;</span>;<br><br><span class="hljs-attr">plugins</span>: [<br>    <span class="hljs-title class_">AutoImport</span>(&#123;<br>      <span class="hljs-attr">resolvers</span>: [<span class="hljs-title class_">ElementPlusResolver</span>()],<br>    &#125;),<br>    <span class="hljs-title class_">Components</span>(&#123;<br>      <span class="hljs-attr">resolvers</span>: [<span class="hljs-title class_">ElementPlusResolver</span>()],<br>    &#125;),<br>],<br></code></pre></td></tr></table></figure><p><a href="https://www.tailwindcss.cn/">TailwindCSS</a></p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-comment">//安装</span><br>yarn add tailwindcss<span class="hljs-meta">@latest</span> postcss<span class="hljs-meta">@latest</span> autoprefixer<span class="hljs-meta">@latest</span> -D<br>npx tailwindcss init -p<br><br><span class="hljs-comment">//assets/styles/index.css</span><br><span class="hljs-meta">@tailwind</span> base;<br><span class="hljs-meta">@tailwind</span> components;<br><span class="hljs-meta">@tailwind</span> utilities;<br><br><span class="hljs-comment">//main.js</span><br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;@/assets/styles/index.css&quot;</span>;        <span class="hljs-comment">//一定要放elementPlus之前</span><br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;text-red-600&quot;</span>&gt;</span>样式<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p><a href="https://www.iconfont.cn/">IconFont</a></p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-number">1.</span> 将需要的图标添加到我的项目<br><span class="hljs-number">2.</span> 选择<span class="hljs-title class_">Symbol</span>并生成代码，把代码拖放到新标签并复制<br><span class="hljs-number">3.</span> 新建assets/scripts/iconfont.<span class="hljs-property">js</span>，把代码粘贴到该文件<br><br><span class="hljs-comment">//mian.js</span><br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;@/assets/scripts/iconfont.js&quot;</span>;<br><br><span class="hljs-comment">//App.vue</span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;icon&quot;</span> <span class="hljs-attr">aria-hidden</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;50&quot;</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;<span class="hljs-name">use</span> <span class="hljs-attr">xlink:href</span>=<span class="hljs-string">&quot;#icon-react&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">use</span>&gt;</span></span><br><span class="language-xml"><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p><a href="https://fonts.google.com/">GoogleFont</a></p><figure class="highlight tsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs tsx"><span class="hljs-comment">// 字体下载后放到assets/fonts目录</span><br><br><span class="hljs-comment">//assets/styles/index.css</span><br><span class="hljs-meta">@font</span>-face &#123;  <br>  font-<span class="hljs-attr">family</span>: <span class="hljs-string">&#x27;NotoSerifSC-Black&#x27;</span>; <br>  <span class="hljs-attr">src</span>: <span class="hljs-title function_">url</span>(<span class="hljs-string">&#x27;../fonts/NotoSerifSC-Black.otf&#x27;</span>);<br>  font-<span class="hljs-attr">weight</span>: normal;  <br>  font-<span class="hljs-attr">style</span>: normal;  <br>&#125;<br><br><span class="hljs-comment">//main</span><br><span class="hljs-keyword">import</span> <span class="hljs-string">&quot;@/assets/styles/index.css&quot;</span>;<br></code></pre></td></tr></table></figure><h2 id="JSX"><a href="#JSX" class="headerlink" title="JSX"></a>JSX</h2>]]></content>
    
    
    <categories>
      
      <category>前端</category>
      
    </categories>
    
    
    <tags>
      
      <tag>vue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>餐馆</title>
    <link href="/posts/54881.html"/>
    <url>/posts/54881.html</url>
    
    <content type="html"><![CDATA[<h1 id="餐馆"><a href="#餐馆" class="headerlink" title="餐馆"></a>餐馆</h1><blockquote><p>8&#x2F;11&#x2F;21</p></blockquote><p>我们仨走进一家餐馆，屋内被桌椅板凳挤得容不下两人并排，女人率先走到厨房向老板点了中份板面，我也点了份中份的板面。老板问我要加什么，我说加火腿，少放辣椒。游走在厨房内我观察着，油烟机被，锅里的煮水冒着气泡，他正抻着拉面甩在带有皲裂的菜板上，角落里立着一个垃圾筐，里面是发霉的土豆。出去前还点了白菜叶，老板扭过头用怪异的眼光打量着我，说这是白菜条。白菜是我唯一爱吃的蔬菜。</p><p>女人坐在凳子上等着食物，我与另一个男人走到屋外，今天的日光有些刺眼。那个男人提议去搞点钱，我犹豫再三还是同意跟他去，我们仨现在都是吃不起饭的人。我问要不要带上那个女人，他没有说话。</p><p>他带我走到一处拐角，推开一扇腐朽的木质门，我感觉这门可以一脚踹开。他走在我前面，推开一扇扇的木质大门，这里大的出奇，并且有很多的门。所有的一切都是由木头造的，对于这种单一的色调有种不安。他始终以一种不紧不慢的姿态走着，看得出他对这里的地形算得上是轻车熟路了。男人说他以前经常来这里搞钱，过去这里很奢华，来到这里的都是名流，可惜几年前莫名其妙地破产了。这周围所有木质的家具都发了霉，空气中充溢着腐朽的气息，对于我这种偏执狂来说很气愤，脑子里浮现出为什么不一把烧了这里的问题。这里的氛围每个人都有不同的感觉，有些人怀念，想象着穿着西装男人弹着钢琴，穿着红色东方丝绸的女人拿着装有红酒的高脚杯唱着欢快歌，舞台底下的一堆人随声附和的奢华。有些人愤慨，他们出生在街道的角落，犹如老鼠一般，受尽他们的剥削，我就是其中之一。</p><p>他推开那扇门之后，就停下脚步，呆呆地望着面前的一块木板。这间屋子空荡荡的，中间摆放着的这块木板怪异得使人脊背发凉，让我想到古人洗澡时用来遮蔽的屏障。</p><p>突然眼前出现一个女人在追逐一个小孩，那个孩子绕着这块木板欢快地跑着，一圈，两圈，三圈，她俩一前一后地笑着。女人说跑慢点啊，小心别跌了；男孩说妈妈你来追我啊，我竖着耳朵倾听可就是听不见她俩在说些什么，但听到了某种哭泣，他哭了。</p><p>他开始追着那个孩子，他俩的笑容一模一样，仿佛同一个人。</p><p>大师说过，每个人内心深处都有一束幻光，这一定是属于他的幻光，这间屋子就是窥探他内心的窗户，但谁把幻光当作幻光谁便堕入了无尽的苦海。</p><p>他越来越深陷其中无法自拔，从他追着孩子到孩子追着他，笑容也逐渐变为狰狞，孩子后的女人也不知何时消失了。这间屋子开始动，发出像是木板与木板间松动的即即的声响。没错，这是间鬼屋，孩子蜕变为没有脚且透明的深灰色厉鬼，死死地抓着他的衣角。男人拖着身后的厉鬼，跑的越来越慢，大汗淋漓。</p><p>我从裤袋拿出一个烟盒，可由于鬼屋的抖动使我的烟散落一地，我把烟盒中仅存的一只烟叼在嘴里，再从另一个裤袋掏出打火机，颤颤巍巍的按下开关，火苗左摇右晃地逃避拒绝给这支烟做洗礼。我深吸一口吐出一团无规则带有异味的雾气，烟灰掉在地板上给这间屋子留下永久的创伤。</p><p>“给你，我不清楚你要加什么”老板站在我桌前说着。</p><p>桌上摆着一碗汤，一袋抻好的面条，还有一堆要加的东西，就是没有白菜叶。</p><p>“如果我会弄还会跑来你这儿黑心餐馆吃饭吗”我骂骂咧咧道。</p><p>“讲道理，我对做饭这件事一窍不通”我对将要动筷的女人说。</p><p>老板也没有丝毫退让的地步，我身旁的那对男女已经津津有味地吃了起来。我起身拍屁股走人，身后的那个黑心老板叫嚣着让我付钱，我没有回头。他说找人打我，于是我加快脚步跑了。</p><p>我气喘吁吁地跑着，在一处灰烬旁停下脚步，双手按在膝盖上半蹲半立着。抬头目视这空洞的黑色，几曾何时它多么地美丽，现在它永远消失了，仿佛没有存在过一般。</p><p>%%——灵感源于《伊春》中的邻居</p>]]></content>
    
    
    <categories>
      
      <category>故事</category>
      
    </categories>
    
    
    <tags>
      
      <tag>小说</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>示例</title>
    <link href="/posts/37091.html"/>
    <url>/posts/37091.html</url>
    
    <content type="html"><![CDATA[<h1 id="最近"><a href="#最近" class="headerlink" title="最近"></a>最近</h1><h2 id="最快明白"><a href="#最快明白" class="headerlink" title="最快明白"></a>最快明白</h2><p>最近项目在开发取图和显示模块，因为我用的QT+Halcon，所以需要将相机Buffer转换成Hobject处理，然后Hobject需要转换成QImage，QImage转换成QPixmap进行显示<br>图像内存转换的资料网上很多，但是我发现大多数人都忽略了一个图像对齐的问题，对齐其实就是图像宽度是4的整数倍</p><p>1、相机Buffer出来的内存一般是不考虑对齐的，我用过的AVI Basler 海康 大华都是这样<br>2、HObject也是不要考虑对齐的，所有相机buffer转hobject就很简单，黑白图像为例：<br>Front-matter</p><p class="note note-primary">便签</p><span class="label label-primary">标签</span><a class="btn" href="url" title="title">按钮</a><link rel="stylesheet" href="/dist/APlayer.min.css"><div id="aplayer" style="border-radius: 5px"></div><script type="text/javascript" src="/dist/APlayer.min.js"></script><script type="text/javascript" src="/js/custom/custom.js"></script><p><img src="/img/fluid.png" alt="sdfs"></p><div id="dplayer0" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"theme":"#6c5ce7","hotkey":true,"preload":"meatadata","volume":0.5,"video":{"url":"http://www.nenu.edu.cn/_upload/article/videos/03/5f/7c999eed42e3aadc413d7f851f0e/0f50b3eb-9285-41d2-ac4d-6cc363651aad_B.mp4","pic":"/img/amaqi.jpeg"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> http = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;http&#x27;</span>);     <span class="hljs-comment">//导入http|https，具体看接口的协议</span><br><span class="hljs-keyword">let</span> port = <span class="hljs-number">8082</span>;<br><span class="hljs-keyword">let</span> hostname = <span class="hljs-string">&#x27;127.0.0.1&#x27;</span>;<br><span class="hljs-keyword">let</span> datas = <span class="hljs-string">&#x27;&#x27;</span>;<br><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<br><br><br><span class="hljs-comment">//请求客户端数据，响应客户端数据</span><br><span class="hljs-keyword">const</span> server = http.<span class="hljs-title function_">createServer</span>(<span class="hljs-function">(<span class="hljs-params">request, response</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">if</span> (request.<span class="hljs-property">url</span> != <span class="hljs-string">&#x27;/favicon.ico&#x27;</span>) &#123;<br>        response.<span class="hljs-title function_">setHeader</span>(<span class="hljs-string">&#x27;Access-Control-Allow-Origin&#x27;</span>, <span class="hljs-string">&#x27;*&#x27;</span>);<br>        response.<span class="hljs-title function_">writeHead</span>(<span class="hljs-number">200</span>, &#123; <span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;application/json;charset=utf-8&#x27;</span> &#125;);            <span class="hljs-comment">//草草草草草草草草草草草草草草草草草草草草草草草草草草草草草草草草草草草草草草草草草草草</span><br><br><br>        <span class="hljs-comment">//设置请求……</span><br>        request.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;data&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">chunk</span>) =&gt;</span> &#123;       <span class="hljs-comment">//服务器接收到的post数据</span><br>            data += chunk.<span class="hljs-title function_">toString</span>();<br>        &#125;);<br>        request.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;end&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-comment">//读取</span><br>            fs.<span class="hljs-title function_">readFile</span>(__dirname+<span class="hljs-string">&#x27;/linshi.json&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">err, data</span>)=&gt;</span>&#123;<br>                <span class="hljs-comment">// if</span><br>                <span class="hljs-keyword">let</span> poetry = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(data.<span class="hljs-title function_">toString</span>());<br>                <span class="hljs-keyword">let</span> rand = <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>()*(poetry.<span class="hljs-property">poetry</span>.<span class="hljs-property">length</span>));<br>                poetry.<span class="hljs-property">poetry</span> = poetry.<span class="hljs-property">poetry</span>[rand];<br>                datas = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(poetry);<br>                <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(datas);<br>            &#125;)<br>            <span class="hljs-comment">// response.write(&#x27;数据接收完成&#x27;);</span><br>            response.<span class="hljs-title function_">end</span>(datas);               <span class="hljs-comment">//结束请求，必须写</span><br>        &#125;)<br>        request.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;close&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;服务已关闭，在response.end()后&quot;</span>);<br>        &#125;)<br>        request.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;error&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>            <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(err.<span class="hljs-property">message</span>);<br>        &#125;)<br>    &#125;<br>&#125;)<br><br>server.<span class="hljs-title function_">listen</span>(port, hostname, <span class="hljs-function">() =&gt;</span> &#123;           <span class="hljs-comment">//port&gt;1023即可</span><br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Server running at http://<span class="hljs-subst">$&#123;hostname&#125;</span>:<span class="hljs-subst">$&#123;port&#125;</span>`</span>);<br>&#125;)<br>server.<span class="hljs-title function_">close</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`Server stopped at http://<span class="hljs-subst">$&#123;hostname&#125;</span>:<span class="hljs-subst">$&#123;port&#125;</span>`</span>);<br>&#125;)<br>server.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;error&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(err.<span class="hljs-property">message</span>);<br>&#125;)<br></code></pre></td></tr></table></figure><h3 id="我出无"><a href="#我出无" class="headerlink" title="我出无"></a>我出无</h3><p>三盆场赛彭哦红牌好吃派桑挂牌桑给庞东捧场赛跑刚送拍哈牌刚刚怕红<br>赛风赛风<br>sdfdsfdsfsdfsd反sdfs<br>dsfsdfs<br>赛风赛风赛<br>东方赛风森<br>sdfsdf sdfsfsdfsd<br>赛风赛风</p><p>赛风赛风<br>sdfdsfdsfsdfsd反sdfs<br>dsfsdfs<br>赛风赛风赛<br>东方赛风森<br>sdfsdf sdfsfsdfsd<br>赛风赛风<br>赛风赛风<br>sdfdsfdsfsdfsd反sdfs<br>dsfsdfs<br>赛风赛风赛<br>东方赛风森<br>sdfsdf sdfsfsdfsd<br>赛风赛风</p>]]></content>
    
    
    <categories>
      
      <category>哈哈</category>
      
    </categories>
    
    
    <tags>
      
      <tag>jQuery</tag>
      
    </tags>
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>关于</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
</search>
